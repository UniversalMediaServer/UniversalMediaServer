<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!--
		UMS consists of two major parts: UMS itself and the third party software needed to
		run it. While UMS itself is 100% pure Java, some of the third party software is
		not. This means building a platform specific distribution boils down to first
		building the ums.jar and then assembling all application resources.

		Note that Maven 3 does not automatically install all dependencies, unlike Maven 2.
		To install external dependencies to your local repository, run the following commands:

		mvn external:install

		To build UMS, do:

			mvn clean package

		After building, the "target" directory will contain the binary.
		To generate a full source code report, do:

			mvn site

		After generating, the "target/site" directory will contain the reports.
	-->

	<modelVersion>4.0.0</modelVersion>
	<groupId>net.pms</groupId>
	<artifactId>ums</artifactId>
	<name>Universal Media Server</name>
	<packaging>jar</packaging>
	<version>10.5.0-SNAPSHOT</version>
	<url>https://www.universalmediaserver.com/</url>
	<inceptionYear>2012</inceptionYear>

	<organization>
		<name>Universal Media Server</name>
		<url>https://www.universalmediaserver.com/</url>
	</organization>
	<licenses>
		<license>
			<name>GNU General Public License version 2</name>
			<url>https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt</url>
			<distribution>manual</distribution>
		</license>
	</licenses>
	<description>
		Universal Media Server is a cross-platform DLNA-compliant UPnP Media Server.
		Originally written to support the PlayStation 3, Universal Media Server has been
		expanded to support a range of other media renderers, including smartphones,
		televisions, music players and more.
	</description>
	<scm>
		<connection>scm:git:git://github.com/UniversalMediaServer/UniversalMediaServer.git</connection>
		<developerConnection>scm:git:git@github.com:UniversalMediaServer/UniversalMediaServer.git</developerConnection>
		<tag>master</tag>
		<url>https://github.com/UniversalMediaServer/UniversalMediaServer</url>
	</scm>
	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/UniversalMediaServer/UniversalMediaServer/issues</url>
	</issueManagement>
	<properties>
		<!-- NSIS needs a version without "-SNAPSHOT" or "-b1" -->
		<project.version.short>10.5.0</project.version.short>
		<cuelib-version>1.2.1-2008-06-13</cuelib-version>

		<!-- In versions after 1.6.0, they removed code that the MovieInfo plugin relies on -->
		<jgoodies-forms-version>1.6.0</jgoodies-forms-version>

		<!-- Version 2.7.0 is the last free version. The latest libraries are shipped only with the commercial JGoodies Smart Client -->
		<jgoodies-looks-version>2.7.0</jgoodies-looks-version>

		<sevenzip-version>16.02-2.01</sevenzip-version>

		<twelvemonkeys-imageio-version>3.7.0</twelvemonkeys-imageio-version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.external-resources>${project.basedir}/src/main/external-resources</project.external-resources>
		<project.binaries>${project.basedir}/target/bin</project.binaries>

		<project.binaries-base>https://www.universalmediaserver.com/svn/binaries</project.binaries-base>
		<binary-revision>127</binary-revision>

		<exec-maven-plugin-version>3.0.0</exec-maven-plugin-version>
		<maven-antrun-plugin-version>3.0.0</maven-antrun-plugin-version>
		<maven-javadoc-plugin-version>3.2.0</maven-javadoc-plugin-version>
		<git-commit-id-plugin-version>4.0.4</git-commit-id-plugin-version>
		<maven-assembly-plugin-version>3.3.0</maven-assembly-plugin-version>
		<maven-enforcer-plugin-version>3.0.0-M3</maven-enforcer-plugin-version>

		<!--
			org.slf4j:slf4j-api is shared with
				- su.litvak.chromecast:api-v2
				- fm.last:coverartarchive-api
				- com.github.oshi:oshi-core

			Check the org.slf4j:slf4j-api version of the other libraries before upgrading
		-->
		<logback-version>1.2.3</logback-version>
		<surefire-version>3.0.0-M5</surefire-version>

		<!--
			net.java.dev.jna:jna-platform is shared with
				- com.github.oshi:oshi-core

			Check the net.java.dev.jna:jna-platform version of the other library before upgrading
		-->
		<jna-version>5.7.0</jna-version>

		<!--
			 use the Windows makensis.exe for Windows builds unless
			 the system makensis is explicitly selected via the
			 system-makensis profile
		 -->
		<makensis-bin>${project.external-resources}/third-party/nsis/makensis.exe</makensis-bin>
		<junit5.version>5.7.1</junit5.version>
		<com.sun.xml.bind-version>3.0.0</com.sun.xml.bind-version>
	</properties>
	<pluginRepositories>
		<pluginRepository>
			<id>ossrh</id>
			<name>Sonatype OSS Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<layout>default</layout>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>4thline-repo</id>
			<url>http://4thline.org/m2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jaudiotagger-repository</id>
			<url>https://dl.bintray.com/ijabz/maven</url>
		</repository>
	</repositories>
	<dependencies>
		<!-- TODO this can be removed when MEncoder is removed -->
		<dependency>
			<groupId>org.beanshell</groupId>
			<artifactId>bsh-core</artifactId>
			<version>2.0b4</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<!--
				commons-logging:commons-logging is shared with
					- fm.last:coverartarchive-api

				Check the commons-logging:commons-logging version of the other libraries before upgrading
			-->
			<version>1.10</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
			<version>4.1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<!--
				commons-io:commons-io is shared with
					- fm.last:coverartarchive-api

				Check the commons-io:commons-io version of the library before upgrading
			-->
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.9</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<!-- Versions above 1.4.199 should only be used when https://github.com/UniversalMediaServer/UniversalMediaServer/issues/2030 is done -->
			<version>1.4.199</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback-version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.6</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId> <!-- Use 'netty-all' for 4.0 or above -->
			<version>3.10.6.Final</version>
			<scope>compile</scope>
		</dependency>

		<!-- maven replacement for nsisant-1.2.jar -->
		<dependency>
			<groupId>maven</groupId>
			<artifactId>maven-nsis-plugin</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>com.rometools</groupId>
			<artifactId>rome</artifactId>
			<!--
				org.slf4j:slf4j-api is shared with
					- ch.qos.logback:logback-classic
					- su.litvak.chromecast
					- fm.last:coverartarchive-api
					- com.github.oshi:oshi-core

				Check the org.slf4j:slf4j-api version of the other libraries before upgrading
			-->
			<version>1.15.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.14</version>
		</dependency>

		<!--
			If any ImageIO plugins are added or removed, corresponding changes
		 	must be made in src/main/external-resources/META-INF/services
		 -->
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-bmp</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-core</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-icns</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-iff</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-jpeg</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-hdr</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-metadata</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-pcx</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-pict</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-pnm</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-psd</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-sgi</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-tga</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-tiff</artifactId>
			<version>${twelvemonkeys-imageio-version}</version>
		</dependency>
		<dependency>
			<groupId>org.sejda.imageio</groupId>
			<artifactId>webp-imageio</artifactId>
			<version>0.1.6</version>
		</dependency>
		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
			<version>2.15.0</version>
		</dependency>
		<dependency>
			<groupId>net.jthink</groupId>
			<artifactId>jaudiotagger</artifactId>
			<version>2.2.5</version>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-forms</artifactId>
			<version>${jgoodies-forms-version}</version>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-looks</artifactId>
			<version>${jgoodies-looks-version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.junrar</groupId>
			<artifactId>junrar</artifactId>
			<version>7.4.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- XXX: not Mavenized: https://code.google.com/p/cuelib/ -->
		<dependency>
			<groupId>jwbroek.cuelib</groupId>
			<artifactId>cuelib</artifactId>
			<version>${cuelib-version}</version>
		</dependency>

		<dependency>
			<groupId>xmlwise</groupId>
			<artifactId>xmlwise</artifactId>
			<version>1.2.11</version>
		</dependency>
		<dependency>
			<groupId>net.sf.sevenzipjbinding</groupId>
			<artifactId>sevenzipjbinding</artifactId>
			<version>${sevenzip-version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.sevenzipjbinding</groupId>
			<artifactId>sevenzipjbinding-all-platforms</artifactId>
			<version>${sevenzip-version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit5.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit5.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit5.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-util</artifactId>
			<version>1.2.5</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<!-- Use 3.x for Java 8 -->
			<version>3.19.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna</artifactId>
			<version>${jna-version}</version>
		</dependency>
		<dependency>
			<groupId>net.java.dev.jna</groupId>
			<artifactId>jna-platform</artifactId>
			<version>${jna-version}</version>
		</dependency>
		<dependency>
			<groupId>org.fourthline.cling</groupId>
			<artifactId>cling-core</artifactId>
			<version>2.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.fourthline.cling</groupId>
			<artifactId>cling-support</artifactId>
			<version>2.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.seamless</groupId>
			<artifactId>seamless-http</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.seamless</groupId>
			<artifactId>seamless-util</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.seamless</groupId>
			<artifactId>seamless-xml</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.samskivert</groupId>
			<artifactId>jmustache</artifactId>
			<version>1.15</version>
		</dependency>
		<dependency>
			<groupId>su.litvak.chromecast</groupId>
			<artifactId>api-v2</artifactId>
			<!--
				org.slf4j:slf4j-api is shared with
					- ch.qos.logback:logback-classic
					- fm.last:coverartarchive-api
					- com.github.oshi:oshi-core

				Check the org.slf4j:slf4j-api version of the other libraries before upgrading
			-->
			<version>0.11.3</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>69.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>3.0.1u2</version>
		</dependency>
		<dependency>
			<groupId>fm.last</groupId>
			<artifactId>coverartarchive-api</artifactId>
			<!--
				org.slf4j:slf4j-api is shared with
					- ch.qos.logback:logback-classic
					- su.litvak.chromecast
					- com.github.oshi:oshi-core

				Check the org.slf4j:slf4j-api version of the other libraries before upgrading

				commons-logging:commons-logging is shared with
					- commons-configuration:commons-configuration

				Check the commons-logging:commons-logging version of the other libraries before upgrading

				commons-io:commons-io is shared with
					- net.pms:dms

				Check the commons-io:commons-io version before upgrading
			-->
			<version>2.1.1</version>
			<exclusions>
				<!-- This should never have been a dependency in the first place -->
				<exclusion>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jsr305</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-io</groupId>
					<artifactId>commons-io</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.oshi</groupId>
			<artifactId>oshi-core</artifactId>
			<!--
				org.slf4j:slf4j-api is shared with
					- ch.qos.logback:logback-classic
					- su.litvak.chromecast
					- fm.last:coverartarchive-api

				Check the org.slf4j:slf4j-api version of the other libraries before upgrading

				net.java.dev.jna:jna-platform is shared with
					- net.pms:dms

				Check the net.java.dev.jna:jna-platform version before upgrading
			-->
			<version>5.5.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- start of JAXB dependencies -->
		<!--
			Those dependencies could be removed as soon as we drop support for Java 8,
			and add "-add-modules java.xml.bind" as a app command line argument
		-->
		<dependency>
			<groupId>com.sun.xml.messaging.saaj</groupId>
			<artifactId>saaj-impl</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>${com.sun.xml.bind-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>${com.sun.xml.bind-version}</version>
		</dependency>
		<!-- end of JAXB dependencies -->
	</dependencies>
	<build>
		<defaultGoal>assembly:assembly</defaultGoal>

		<!-- specify how files in src/main/resources are bundled in the target jar -->
		<resources>
			<!-- 1) package unfiltered resources -->

			<!--
				This needs to be defined explicitly if a <resources>...</resources>
				section is used
			-->
			<resource>
				<directory>src/main/resources</directory>
				<!--
					By default, Maven packages resources in the top-level of the jar e.g.

						/example.res

					The old UMS ant build packaged them in a "resources" directory
					e.g:

						/resources/example.res

					Currently, we preserve the old destination. If this is ever changed
					to the Maven default, a handful of files will need to be changed to
					reference "/example.res" rather than "/resources/example.res"
				-->
				<targetPath>resources</targetPath>
				<excludes>
					<exclude>project.properties</exclude>
				</excludes>

				<!-- Avoid inadvertently filtering binaries -->
				<filtering>false</filtering>
			</resource>

			<!-- 2) package filtered resources -->
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>resources</targetPath>
				<includes>
					<include>project.properties</include>
				</includes>

				<!-- Filter to replace Maven properties -->
				<filtering>true</filtering>
			</resource>

			<!-- 3) package filtered NSIS header files -->
			<resource>
				<directory>src/main/external-resources/nsis</directory>
				<includes>
					<include>extra.nsh</include>
				</includes>

				<!-- Filter to replace Maven properties -->
				<filtering>true</filtering>
				<targetPath>..</targetPath>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>project.properties</include>
				</includes>
				<targetPath>resources</targetPath>

				<!-- Enable the use of Maven properties -->
				<filtering>true</filtering>
			</testResource>
			<!--*.srt files to test charset detection and *json to test filename prettification-->
			<testResource>
				<directory>src/test/resources/net/pms/util</directory>
				<includes>
					<include>*.srt</include>
					<include>*.json</include>
				</includes>
				<targetPath>net/pms/util</targetPath>
			</testResource>
			<!--*media files to test transcoding and identification-->
			<testResource>
				<directory>src/test/resources/net/pms/dlna</directory>
				<includes>
					<include>*.*</include>
				</includes>
				<targetPath>net/pms/dlna</targetPath>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>

					<version>${surefire-version}</version>
				</plugin>

				<!--
					This plugin's configuration is used to run crowdin plugin from the command line,
					it has no influence on the Maven build itself.
				-->
				<plugin>
					<groupId>org.digitalmediaserver</groupId>
					<artifactId>crowdin-maven-plugin</artifactId>
					<version>1.1.0</version>
					<configuration>
						<project>${project}</project>
						<languageFilesFolder>${project.basedir}/src/main/resources/i18n</languageFilesFolder>
						<downloadFolder>${project.basedir}/extras/crowdin</downloadFolder>
						<statusFile>${project.basedir}/src/main/resources/languages.properties</statusFile>
						<crowdinServerId>crowdin-ums</crowdinServerId>
						<pushFileName>messages.properties</pushFileName>
						<pushFileTitle>Universal Media Server</pushFileTitle>
						<projectName>Universal Media Server</projectName>
					</configuration>
				</plugin>

				<!--
					This plugin's configuration is used to store Eclipse m2e settings only.
					It has no influence on the Maven build itself.
				-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											pl.project13.maven
										</groupId>
										<artifactId>
											git-commit-id-plugin
										</artifactId>
										<versionRange>
											[${git-commit-id-plugin-version},)
										</versionRange>
										<goals>
											<goal>revision</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.universalmediaserver
										</groupId>
										<artifactId>
											external-maven-plugin
										</artifactId>
										<versionRange>
											[0.1,)
										</versionRange>
										<goals>
											<goal>clean</goal>
											<goal>deploy</goal>
											<goal>install</goal>
											<goal>resolve</goal>
											<goal>localinstall</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.universalmediaserver</groupId>
										<artifactId>
											crowdin-maven-plugin
										</artifactId>
										<versionRange>
											[0.1,)
										</versionRange>
										<goals>
											<goal>fetch</goal>
											<goal>push</goal>
											<goal>build</goal>
											<goal>apply</goal>
											<goal>pull</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute></execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin-version}</version>
				<executions>
					<execution>
						<id>enforce</id>
						<configuration>
							<rules>
								<dependencyConvergence/>
								<!-- this is not required, but is recommended for plugin version checks -->
								<requireMavenVersion>
									<version>3.0.0</version>
								</requireMavenVersion>
							</rules>
						</configuration>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--
				Plugin to add git commit information properties.
				These are used in the project.properties files.
				See: https://github.com/ktoso/maven-git-commit-id-plugin
			-->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>${git-commit-id-plugin-version}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dateFormat>yyyy-MM-dd</dateFormat>
					<verbose>false</verbose>
					<generateGitPropertiesFile>false</generateGitPropertiesFile>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<testSource>1.8</testSource>
					<testTarget>1.8</testTarget>
					<compilerArgument>${compilerArgument}</compilerArgument>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>1.5</wtpversion>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-idea-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<dependenciesAsLibraries>true</dependenciesAsLibraries>
					<useFullNames>false</useFullNames>
				</configuration>
			</plugin>

			<!--
				This plugin will take care of installing the external dependencies that do not
				exist in a public Maven repository. That is why we store some jar files in the
				"src/main/external-resources/lib" directory and have this plugin take care of
				the installation at build time.

				Checksums can be calculated with "openssl sha1 [filename]".
			-->
			<plugin>
				<groupId>com.universalmediaserver</groupId>
				<artifactId>external-maven-plugin</artifactId>
				<version>0.3</version>
				<inherited>false</inherited>
				<configuration>
					<disableSSLValidation>true</disableSSLValidation>
					<stagingDirectory>${project.build.directory}/dependencies/</stagingDirectory>
					<createChecksum>true</createChecksum>
					<artifactItems>
						<artifactItem>
							<groupId>jwbroek.cuelib</groupId>
							<artifactId>cuelib</artifactId>
							<version>${cuelib-version}</version>
							<downloadUrl>http://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/cuelib/cuelib-${cuelib-version}.jar</downloadUrl>
							<checksum>d03b6b960b3b83a2a419e8b5f07b6ba4bd18387b</checksum>
						</artifactItem>
					</artifactItems>
				</configuration>
				<executions>
					<execution>
						<id>clean-external-dependencies</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.9.1</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-module-docbook-simple</artifactId>
						<version>1.9.1</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<!-- Set reports for the maven site plugin -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.1.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>dependencies</report>
							<report>dependency-convergence</report>
							<report>dependency-management</report>
							<report>plugins</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<!-- tests report -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire-version}</version>
				<configuration>
					<showSuccess>false</showSuccess>
				</configuration>
			</plugin>

			<!-- Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin-version}</version>
				<configuration>
					<quiet>true</quiet>
					<tags>
						<tag>
							<name>todo</name>
							<placement>a</placement>
							<head>To Do:</head>
						</tag>
						<tag>
							<name>review</name>
							<placement>a</placement>
							<head>Review:</head>
						</tag>
					</tags>
					<detectJavaApiLink>false</detectJavaApiLink>
					<links>
						<link>http://docs.oracle.com/javase/7/docs/api/</link>
					</links>

					<!--
						Doclet to generate class diagrams inside Javadoc.
						Requires the installation of Graphviz (http://www.graphviz.org/)
					-->
					<doclet>org.jboss.apiviz.APIviz</doclet>
					<docletArtifact>
						<groupId>org.jboss.apiviz</groupId>
						<artifactId>apiviz</artifactId>
						<version>1.3.2.GA</version>
					</docletArtifact>
					<useStandardDocletOptions>true</useStandardDocletOptions>
				</configuration>
			</plugin>

			<!-- Class dependency report -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
				<version>2.0</version>
			</plugin>

			<!-- Spotbugs report -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.2.3</version>
			</plugin>

			<!-- Cobertura Test Coverage report -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.14.0</version>
				<configuration>
					<linkXref>false</linkXref>
					<sourceEncoding>utf-8</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>1.8</targetJdk>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.jrh3k5</groupId>
				<artifactId>l10n-maven-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<failBuild>true</failBuild>
					<messagesFile>${project.basedir}/src/main/resources/i18n/messages.properties</messagesFile>
					<translatedMessagesPattern>src/main/resources/i18n/messages*.properties</translatedMessagesPattern>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>system-makensis</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>

			<properties>
				<!-- if selected, use the system makensis on Linux, Mac OS X &c. -->
				<makensis-bin>makensis</makensis-bin>
			</properties>
		</profile>

		<!--
			Windows profile: takes care of building the final package for Microsoft Windows
		-->
		<profile>
			<id>windows</id>

			<build>
				<plugins>
					<!-- Plugin to assemble a jar with dependencies -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
							</descriptors>
							<archive>
								<manifest>
									<mainClass>net.pms.PMS</mainClass>
									<!--
										this is required to make the ImageIo image "plugins" provided by jai-imageio-core-standalone work.
										without it, the following exception is thrown when UMS starts:

										Configuration error: java.util.ServiceConfigurationError: javax.imageio.spi.ImageInputStreamSpi:
											Provider com.sun.media.imageioimpl.stream.ChannelImageInputStreamSpi could not be instantiated:
												java.lang.IllegalArgumentException: vendorName == null!

										See: https://thierrywasyl.wordpress.com/2009/07/24/jai-how-to-solve-vendorname-null-exception/
									-->
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>make-jar-with-dependencies-win</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!--
						Plugin to move the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-windows</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the download folders exist -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/win32" />
										<mkdir dir="${project.binaries}/win32/avisynth" />
										<mkdir dir="${project.binaries}/win32/codecs" />
										<mkdir dir="${project.binaries}/win32/fonts" />
										<mkdir dir="${project.binaries}/win32/fonts/conf.avail" />
										<mkdir dir="${project.binaries}/win32/fonts/conf.d" />
										<mkdir dir="${project.binaries}/win32/interframe" />
										<mkdir dir="${project.binaries}/win32/jre15-x64" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/bin" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/conf" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/lib" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/bin/server" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/conf/management" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/conf/security" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/conf/security/policy" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/conf/security/policy/limited" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/conf/security/policy/unlimited" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.base" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.compiler" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.datatransfer" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.desktop" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.instrument" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.logging" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.management" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.management.rmi" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.naming" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.net.http" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.prefs" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.rmi" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.scripting" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.se" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.security.jgss" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.security.sasl" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.smartcardio" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.sql" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.sql.rowset" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.transaction.xa" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.xml" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/java.xml.crypto" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.accessibility" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.aot" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.charsets" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.compiler" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.cryptoki" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.ec" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.mscapi" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.dynalink" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.httpserver" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.foreign" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.jpackage" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.internal.opt" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.ci" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler.management" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.jdeps" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.jdwp.agent" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.jfr" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.jlink" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.jsobject" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.localedata" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.management" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.management.agent" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.management.jfr" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.naming.dns" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.naming.rmi" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.net" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.nio.mapmode" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.sctp" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.security.auth" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.security.jgss" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.unsupported" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.xml.dom" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/legal/jdk.zipfs" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/lib/jfr" />
										<mkdir dir="${project.binaries}/win32/jre15-x64/lib/security" />

										<mkdir dir="${project.binaries}/win32/jre15-x86" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/bin" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/conf" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/lib" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/bin/client" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/bin/server" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/conf/management" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/conf/security" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/conf/security/policy" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/conf/security/policy/limited" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/conf/security/policy/unlimited" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.base" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.compiler" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.datatransfer" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.desktop" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.instrument" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.logging" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.management" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.management.rmi" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.naming" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.net.http" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.prefs" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.rmi" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.scripting" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.se" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.security.jgss" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.security.sasl" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.smartcardio" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.sql" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.sql.rowset" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.transaction.xa" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.xml" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/java.xml.crypto" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.accessibility" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.charsets" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.compiler" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.cryptoki" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.ec" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.mscapi" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.dynalink" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.httpserver" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.foreign" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.jpackage" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.internal.opt" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.jdeps" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.jdwp.agent" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.jfr" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.jlink" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.jsobject" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.localedata" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.management" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.management.agent" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.management.jfr" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.naming.dns" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.naming.rmi" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.net" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.nio.mapmode" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.sctp" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.security.auth" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.security.jgss" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.unsupported" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.xml.dom" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/legal/jdk.zipfs" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/lib/jfr" />
										<mkdir dir="${project.binaries}/win32/jre15-x86/lib/security" />

										<mkdir dir="${project.binaries}/win32/mplayer" />
										<mkdir dir="${project.binaries}/win32/service" />

										<!-- Download all necessary Windows binaries. Keep the same structure because NSIS expects it that way. -->
										<get src="${project.binaries-base}/MediaInfo.dll?p=${binary-revision}" dest="${project.binaries}/MediaInfo.dll"  usetimestamp="true" />
										<get src="${project.binaries-base}/MediaInfo64.dll?p=${binary-revision}" dest="${project.binaries}/MediaInfo64.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/MediaInfo-License.html?p=${binary-revision}" dest="${project.binaries}/MediaInfo-License.html" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/LICENSE-dsnative.txt?p=${binary-revision}" dest="${project.binaries}/win32/LICENSE-dsnative.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/LICENSE-mplayer.txt?p=${binary-revision}" dest="${project.binaries}/win32/LICENSE-mplayer.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/builds.txt?p=${binary-revision}" dest="${project.binaries}/win32/builds.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/dcrawMS.exe?p=${binary-revision}" dest="${project.binaries}/win32/dcrawMS.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/ffmpeg.exe?p=${binary-revision}" dest="${project.binaries}/win32/ffmpeg.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/ffmpeg64.exe?p=${binary-revision}" dest="${project.binaries}/win32/ffmpeg64.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/flac.exe?p=${binary-revision}" dest="${project.binaries}/win32/flac.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/mencoder.exe?p=${binary-revision}" dest="${project.binaries}/win32/mencoder.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/mplayer.exe?p=${binary-revision}" dest="${project.binaries}/win32/mplayer.exe"  usetimestamp="true" />
										<get src="${project.binaries-base}/win32/tsMuxeR.exe?p=${binary-revision}" dest="${project.binaries}/win32/tsMuxeR.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/tsMuxeR-new.exe?p=${binary-revision}" dest="${project.binaries}/win32/tsMuxeR-new.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/vcomp100.dll?p=${binary-revision}" dest="${project.binaries}/win32/vcomp100.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/avisynth/avisynth.exe?p=${binary-revision}" dest="${project.binaries}/win32/avisynth/avisynth.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/drv33260.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/drv33260.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/drv43260.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/drv43260.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/drvc.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/drvc.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/pncrt.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/pncrt.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/sipr3260.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/sipr3260.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/tokr3260.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/tokr3260.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/wma9dmod.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/wma9dmod.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/wmv9dmod.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/wmv9dmod.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/codecs/wmvdmod.dll?p=${binary-revision}" dest="${project.binaries}/win32/codecs/wmvdmod.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/fonts.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/fonts.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/10-scale-bitmap-fonts.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/10-scale-bitmap-fonts.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/20-unhint-small-vera.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/20-unhint-small-vera.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/30-metric-aliases.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/30-metric-aliases.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/30-urw-aliases.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/30-urw-aliases.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/40-nonlatin.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/40-nonlatin.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/45-latin.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/45-latin.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/49-sansserif.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/49-sansserif.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/50-user.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/50-user.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/51-local.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/51-local.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/60-latin.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/60-latin.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/65-fonts-persian.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/65-fonts-persian.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/65-nonlatin.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/65-nonlatin.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/69-unifont.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/69-unifont.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/80-delicious.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/80-delicious.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/90-synthetic.conf?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/90-synthetic.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/fonts/conf.d/README?p=${binary-revision}" dest="${project.binaries}/win32/fonts/conf.d/README" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/interframe/InterFrame2.avsi?p=${binary-revision}" dest="${project.binaries}/win32/interframe/InterFrame2.avsi" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/interframe/svpflow1.dll?p=${binary-revision}" dest="${project.binaries}/win32/interframe/svpflow1.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/interframe/svpflow2.dll?p=${binary-revision}" dest="${project.binaries}/win32/interframe/svpflow2.dll" usetimestamp="true" />

										<get src="${project.binaries-base}/win32/jre15-x64/release?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/release" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-console-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-console-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-datetime-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-datetime-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-debug-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-debug-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-errorhandling-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-errorhandling-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-file-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-file-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-file-l1-2-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-file-l1-2-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-file-l2-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-file-l2-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-handle-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-handle-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-heap-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-heap-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-interlocked-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-interlocked-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-libraryloader-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-libraryloader-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-localization-l1-2-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-localization-l1-2-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-memory-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-memory-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-namedpipe-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-namedpipe-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-processenvironment-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-processenvironment-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-processthreads-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-processthreads-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-processthreads-l1-1-1.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-processthreads-l1-1-1.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-profile-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-profile-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-rtlsupport-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-rtlsupport-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-string-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-string-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-synch-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-synch-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-synch-l1-2-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-synch-l1-2-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-sysinfo-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-sysinfo-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-timezone-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-timezone-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-core-util-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-core-util-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-conio-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-conio-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-convert-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-convert-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-environment-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-environment-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-filesystem-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-filesystem-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-heap-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-heap-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-locale-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-locale-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-math-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-math-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-multibyte-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-multibyte-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-private-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-private-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-process-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-process-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-runtime-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-runtime-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-stdio-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-stdio-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-string-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-string-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-time-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-time-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/api-ms-win-crt-utility-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/api-ms-win-crt-utility-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/awt.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/awt.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/dt_socket.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/dt_socket.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/fontmanager.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/fontmanager.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/freetype.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/freetype.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/instrument.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/instrument.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/j2gss.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/j2gss.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/j2pcsc.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/j2pcsc.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/j2pkcs11.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/j2pkcs11.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jaas.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jaas.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jabswitch.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jabswitch.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jaccessinspector.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jaccessinspector.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jaccesswalker.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jaccesswalker.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jaotc.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jaotc.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/java.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/java.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/java.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/java.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/javaaccessbridge.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/javaaccessbridge.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/javac.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/javac.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/javajpeg.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/javajpeg.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/javap.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/javap.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/javaw.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/javaw.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jawt.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jawt.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jdeprscan.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jdeprscan.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jdeps.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jdeps.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jdwp.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jdwp.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jfr.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jfr.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jimage.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jimage.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jimage.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jimage.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jli.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jli.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jlink.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jlink.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jmod.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jmod.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jpackage.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jpackage.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jpackage.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jpackage.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jrunscript.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jrunscript.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/jsound.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/jsound.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/keytool.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/keytool.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/kinit.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/kinit.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/klist.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/klist.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/ktab.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/ktab.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/lcms.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/lcms.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/management.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/management.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/management_agent.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/management_agent.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/management_ext.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/management_ext.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/mlib_image.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/mlib_image.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/msvcp140.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/msvcp140.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/net.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/net.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/nio.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/nio.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/prefs.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/prefs.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/rmi.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/rmi.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/rmid.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/rmid.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/rmiregistry.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/rmiregistry.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/serialver.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/serialver.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/splashscreen.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/splashscreen.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/sspi_bridge.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/sspi_bridge.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/sunec.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/sunec.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/sunmscapi.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/sunmscapi.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/ucrtbase.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/ucrtbase.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/vcruntime140.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/vcruntime140.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/verify.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/verify.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/w2k_lsa_auth.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/w2k_lsa_auth.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/WindowsAccessBridge-64.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/WindowsAccessBridge-64.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/zip.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/zip.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/server/classes.jsa?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/server/classes.jsa" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/server/classes_nocoops.jsa?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/server/classes_nocoops.jsa" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/bin/server/jvm.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/bin/server/jvm.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/logging.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/logging.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/net.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/net.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/sound.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/sound.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/management/jmxremote.access?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/management/jmxremote.access" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/management/jmxremote.password.template?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/management/jmxremote.password.template" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/management/management.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/management/management.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/java.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/java.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/java.security?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/java.security" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/policy/README.txt?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/policy/README.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/policy/limited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/policy/limited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/policy/limited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/policy/limited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/policy/limited/exempt_local.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/policy/limited/exempt_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/policy/unlimited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/policy/unlimited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/conf/security/policy/unlimited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/conf/security/policy/unlimited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/aes.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/aes.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/asm.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/asm.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/cldr.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/c-libutl.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/c-libutl.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/icu.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/icu.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/public_suffix.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/public_suffix.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/unicode.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/unicode.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.base/zlib.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.base/zlib.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.datatransfer/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.datatransfer/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.datatransfer/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.datatransfer/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/colorimaging.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/colorimaging.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/freetype.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/freetype.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/giflib.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/giflib.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/harfbuzz.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/harfbuzz.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/jpeg.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/jpeg.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/lcms.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/lcms.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/libpng.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/libpng.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.desktop/mesa3d.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.desktop/mesa3d.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.instrument/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.instrument/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.instrument/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.instrument/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.instrument/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.instrument/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.logging/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.logging/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.logging/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.logging/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.logging/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.logging/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.management.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.management.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.management.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.management.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.naming/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.naming/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.naming/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.naming/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.naming/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.naming/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.net.http/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.net.http/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.net.http/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.net.http/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.net.http/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.net.http/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.prefs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.prefs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.prefs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.prefs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.prefs/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.prefs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.scripting/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.scripting/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.scripting/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.scripting/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.scripting/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.scripting/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.se/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.se/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.se/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.se/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.se/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.se/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.security.sasl/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.security.sasl/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.security.sasl/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.security.sasl/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.smartcardio/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.smartcardio/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.smartcardio/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.smartcardio/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.sql/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.sql/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.sql/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.sql/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.sql/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.sql/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.sql.rowset/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.sql.rowset/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.sql.rowset/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.sql.rowset/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.transaction.xa/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.transaction.xa/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.transaction.xa/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.transaction.xa/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/bcel.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/bcel.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/dom.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/dom.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/jcup.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/jcup.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/xalan.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/xalan.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml/xerces.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml/xerces.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml.crypto/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml.crypto/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml.crypto/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml.crypto/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/java.xml.crypto/santuario.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/java.xml.crypto/santuario.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.accessibility/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.accessibility/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.accessibility/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.accessibility/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.aot/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.aot/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.aot/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.aot/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.aot/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.aot/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.charsets/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.charsets/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.charsets/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.charsets/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.cryptoki/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.cryptoki/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.cryptoki/pkcs11wrapper.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.cryptoki/pkcs11wrapper.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.ec/ecc.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.ec/ecc.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.ec/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.ec/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.mscapi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.mscapi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.mscapi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.mscapi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.crypto.mscapi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.crypto.mscapi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.dynalink/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.dynalink/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.dynalink/dynalink.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.dynalink/dynalink.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.dynalink/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.dynalink/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.httpserver/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.httpserver/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.httpserver/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.httpserver/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.incubator.foreign/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.foreign/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.incubator.jpackage/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.jpackage/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.incubator.jpackage/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.jpackage/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.incubator.jpackage/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.incubator.jpackage/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.opt/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.opt/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.opt/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.opt/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.opt/jopt-simple.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.opt/jopt-simple.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.opt/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.opt/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.ci/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.ci/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.ci/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.ci/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.ci/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.ci/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.compiler.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.compiler.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.internal.vm.compiler.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.internal.vm.compiler.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jdeps/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jdeps/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jdeps/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jdeps/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jdeps/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jdeps/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jdwp.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jdwp.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jlink/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jlink/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jlink/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jlink/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jlink/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jlink/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jsobject/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jsobject/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.jsobject/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.jsobject/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.localedata/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.localedata/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.localedata/cldr.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.localedata/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.localedata/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.localedata/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.localedata/thaidict.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.localedata/thaidict.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.management.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.management.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.naming.dns/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.naming.dns/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.naming.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.naming.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.net/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.net/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.net/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.net/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.net/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.net/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.nio.mapmode/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.nio.mapmode/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.sctp/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.sctp/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.sctp/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.sctp/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.security.auth/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.security.auth/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.security.auth/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.security.auth/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.unsupported/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.unsupported/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.unsupported/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.unsupported/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.xml.dom/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.xml.dom/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.zipfs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.zipfs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/legal/jdk.zipfs/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/legal/jdk.zipfs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/classlist?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/classlist" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/ct.sym?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/ct.sym" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/fontconfig.bfc?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/fontconfig.bfc" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/fontconfig.properties.src?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/fontconfig.properties.src" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/jawt.lib?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/jawt.lib" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/jrt-fs.jar?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/jrt-fs.jar" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/jvm.cfg?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/jvm.cfg" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/jvm.lib?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/jvm.lib" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/modules?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/modules" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/psfont.properties.ja?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/psfont.properties.ja" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/psfontj2d.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/psfontj2d.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/tzdb.dat?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/tzdb.dat" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/tzmappings?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/tzmappings" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/jfr/default.jfc?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/jfr/default.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/jfr/profile.jfc?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/jfr/profile.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/security/blacklisted.certs?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/security/blacklisted.certs" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/security/cacerts?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/security/cacerts" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/security/default.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/security/default.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x64/lib/security/public_suffix_list.dat?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x64/lib/security/public_suffix_list.dat" usetimestamp="true" />

										<get src="${project.binaries-base}/win32/jre15-x86/release?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/release" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-console-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-console-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-datetime-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-datetime-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-debug-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-debug-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-errorhandling-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-errorhandling-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-file-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-file-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-file-l1-2-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-file-l1-2-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-file-l2-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-file-l2-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-handle-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-handle-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-heap-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-heap-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-interlocked-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-interlocked-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-libraryloader-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-libraryloader-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-localization-l1-2-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-localization-l1-2-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-memory-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-memory-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-namedpipe-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-namedpipe-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-processenvironment-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-processenvironment-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-processthreads-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-processthreads-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-processthreads-l1-1-1.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-processthreads-l1-1-1.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-profile-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-profile-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-rtlsupport-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-rtlsupport-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-string-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-string-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-synch-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-synch-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-synch-l1-2-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-synch-l1-2-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-sysinfo-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-sysinfo-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-timezone-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-timezone-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-core-util-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-core-util-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/API-MS-Win-core-xstate-l2-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/API-MS-Win-core-xstate-l2-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-conio-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-conio-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-convert-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-convert-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-environment-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-environment-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-filesystem-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-filesystem-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-heap-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-heap-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-locale-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-locale-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-math-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-math-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-multibyte-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-multibyte-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-private-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-private-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-process-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-process-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-runtime-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-runtime-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-stdio-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-stdio-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-string-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-string-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-time-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-time-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/api-ms-win-crt-utility-l1-1-0.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/api-ms-win-crt-utility-l1-1-0.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/awt.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/awt.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/dt_socket.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/dt_socket.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/fontmanager.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/fontmanager.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/freetype.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/freetype.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/instrument.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/instrument.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/j2gss.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/j2gss.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/j2pcsc.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/j2pcsc.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/j2pkcs11.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/j2pkcs11.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jaas.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jaas.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jabswitch.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jabswitch.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jabsysinfo.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jabsysinfo.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jaccessinspector.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jaccessinspector.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jaccessinspector-32.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jaccessinspector-32.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jaccesswalker.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jaccesswalker.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jaccesswalker-32.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jaccesswalker-32.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/java.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/java.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/java.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/java.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/JavaAccessBridge.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/JavaAccessBridge.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/JavaAccessBridge-32.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/JavaAccessBridge-32.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/javac.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/javac.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/javajpeg.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/javajpeg.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/javap.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/javap.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/javaw.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/javaw.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jawt.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jawt.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jdeprscan.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jdeprscan.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jdeps.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jdeps.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jdwp.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jdwp.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jfr.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jfr.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jimage.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jimage.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jimage.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jimage.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jli.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jli.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jlink.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jlink.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jmod.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jmod.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jpackage.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jpackage.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jpackage.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jpackage.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jrunscript.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jrunscript.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/jsound.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/jsound.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/keytool.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/keytool.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/kinit.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/kinit.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/klist.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/klist.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/ktab.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/ktab.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/lcms.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/lcms.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/management.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/management.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/management_agent.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/management_agent.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/management_ext.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/management_ext.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/mlib_image.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/mlib_image.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/msvcp140.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/msvcp140.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/net.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/net.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/nio.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/nio.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/prefs.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/prefs.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/rmi.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/rmi.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/rmid.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/rmid.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/rmiregistry.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/rmiregistry.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/serialver.exe?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/serialver.exe" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/splashscreen.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/splashscreen.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/sspi_bridge.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/sspi_bridge.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/sunec.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/sunec.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/sunmscapi.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/sunmscapi.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/ucrtbase.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/ucrtbase.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/vcruntime140.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/vcruntime140.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/verify.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/verify.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/w2k_lsa_auth.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/w2k_lsa_auth.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/WindowsAccessBridge.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/WindowsAccessBridge.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/WindowsAccessBridge-32.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/WindowsAccessBridge-32.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/zip.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/zip.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/client/jvm.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/client/jvm.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/server/classes.jsa?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/server/classes.jsa" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/bin/server/jvm.dll?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/bin/server/jvm.dll" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/logging.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/logging.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/net.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/net.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/sound.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/sound.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/management/jmxremote.access?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/management/jmxremote.access" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/management/jmxremote.password.template?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/management/jmxremote.password.template" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/management/management.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/management/management.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/java.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/java.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/java.security?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/java.security" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/policy/README.txt?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/policy/README.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/policy/limited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/policy/limited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/policy/limited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/policy/limited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/policy/limited/exempt_local.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/policy/limited/exempt_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/policy/unlimited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/policy/unlimited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/conf/security/policy/unlimited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/conf/security/policy/unlimited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/aes.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/aes.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/asm.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/asm.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/cldr.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/c-libutl.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/c-libutl.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/icu.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/icu.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/public_suffix.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/public_suffix.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/unicode.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/unicode.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.base/zlib.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.base/zlib.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.datatransfer/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.datatransfer/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.datatransfer/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.datatransfer/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/colorimaging.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/colorimaging.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/freetype.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/freetype.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/giflib.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/giflib.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/harfbuzz.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/harfbuzz.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/jpeg.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/jpeg.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/lcms.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/lcms.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/libpng.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/libpng.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.desktop/mesa3d.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.desktop/mesa3d.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.instrument/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.instrument/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.instrument/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.instrument/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.instrument/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.instrument/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.logging/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.logging/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.logging/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.logging/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.logging/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.logging/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.management.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.management.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.management.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.management.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.naming/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.naming/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.naming/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.naming/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.naming/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.naming/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.net.http/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.net.http/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.net.http/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.net.http/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.net.http/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.net.http/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.prefs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.prefs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.prefs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.prefs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.prefs/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.prefs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.scripting/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.scripting/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.scripting/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.scripting/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.scripting/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.scripting/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.se/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.se/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.se/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.se/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.se/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.se/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.security.sasl/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.security.sasl/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.security.sasl/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.security.sasl/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.smartcardio/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.smartcardio/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.smartcardio/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.smartcardio/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.sql/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.sql/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.sql/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.sql/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.sql/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.sql/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.sql.rowset/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.sql.rowset/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.sql.rowset/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.sql.rowset/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.transaction.xa/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.transaction.xa/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.transaction.xa/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.transaction.xa/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/bcel.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/bcel.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/dom.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/dom.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/jcup.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/jcup.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/xalan.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/xalan.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml/xerces.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml/xerces.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml.crypto/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml.crypto/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml.crypto/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml.crypto/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/java.xml.crypto/santuario.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/java.xml.crypto/santuario.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.accessibility/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.accessibility/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.accessibility/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.accessibility/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.charsets/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.charsets/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.charsets/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.charsets/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.cryptoki/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.cryptoki/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.cryptoki/pkcs11wrapper.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.cryptoki/pkcs11wrapper.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.ec/ecc.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.ec/ecc.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.ec/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.ec/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.mscapi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.mscapi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.mscapi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.mscapi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.crypto.mscapi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.crypto.mscapi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.dynalink/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.dynalink/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.dynalink/dynalink.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.dynalink/dynalink.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.dynalink/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.dynalink/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.httpserver/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.httpserver/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.httpserver/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.httpserver/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.incubator.foreign/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.foreign/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.incubator.jpackage/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.jpackage/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.incubator.jpackage/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.jpackage/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.incubator.jpackage/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.incubator.jpackage/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.internal.opt/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.internal.opt/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.internal.opt/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.internal.opt/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.internal.opt/jopt-simple.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.internal.opt/jopt-simple.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.internal.opt/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.internal.opt/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jdeps/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jdeps/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jdeps/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jdeps/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jdeps/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jdeps/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jdwp.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jdwp.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jlink/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jlink/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jlink/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jlink/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jlink/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jlink/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jsobject/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jsobject/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.jsobject/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.jsobject/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.localedata/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.localedata/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.localedata/cldr.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.localedata/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.localedata/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.localedata/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.localedata/thaidict.md?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.localedata/thaidict.md" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.management.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.management.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.naming.dns/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.naming.dns/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.naming.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.naming.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.net/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.net/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.net/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.net/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.net/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.net/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.nio.mapmode/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.nio.mapmode/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.sctp/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.sctp/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.sctp/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.sctp/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.security.auth/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.security.auth/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.security.auth/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.security.auth/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.unsupported/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.unsupported/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.unsupported/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.unsupported/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.xml.dom/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.xml.dom/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.zipfs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.zipfs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/legal/jdk.zipfs/LICENSE?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/legal/jdk.zipfs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/classlist?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/classlist" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/ct.sym?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/ct.sym" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/fontconfig.bfc?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/fontconfig.bfc" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/fontconfig.properties.src?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/fontconfig.properties.src" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/jawt.lib?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/jawt.lib" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/jrt-fs.jar?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/jrt-fs.jar" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/jvm.cfg?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/jvm.cfg" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/jvm.lib?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/jvm.lib" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/modules?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/modules" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/psfont.properties.ja?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/psfont.properties.ja" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/psfontj2d.properties?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/psfontj2d.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/tzdb.dat?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/tzdb.dat" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/tzmappings?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/tzmappings" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/jfr/default.jfc?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/jfr/default.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/jfr/profile.jfc?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/jfr/profile.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/security/blacklisted.certs?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/security/blacklisted.certs" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/security/cacerts?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/security/cacerts" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/security/default.policy?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/security/default.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/jre15-x86/lib/security/public_suffix_list.dat?p=${binary-revision}" dest="${project.binaries}/win32/jre15-x86/lib/security/public_suffix_list.dat" usetimestamp="true" />

										<get src="${project.binaries-base}/win32/mplayer/config?p=${binary-revision}" dest="${project.binaries}/win32/mplayer/config" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/mplayer/input.conf?p=${binary-revision}" dest="${project.binaries}/win32/mplayer/input.conf" usetimestamp="true" />
										<get src="${project.binaries-base}/win32/mplayer/subfont.ttf?p=${binary-revision}" dest="${project.binaries}/win32/mplayer/subfont.ttf" usetimestamp="true" />

										<!-- MediaInfo library needs to be in the standard library path to be found -->
										<copy file="${project.binaries}/MediaInfo.dll" todir="${project.basedir}" />
										<copy file="${project.binaries}/MediaInfo64.dll" todir="${project.basedir}" />
										<copy file="${project.binaries}/MediaInfo-License.html" todir="${project.basedir}" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>prepare-package-windows</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- Copy ums-x.x.x-jar-with-dependencies.jar to ums.jar -->
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
													tofile="${project.basedir}/target/ums.jar" overwrite="true" />

										<!-- Copy the wrapper to its destination -->
										<mkdir dir="${project.basedir}/win32/service" />
										<copy todir="${project.basedir}/win32/service" overwrite="true">
											<fileset dir="${project.external-resources}/third-party/wrapper" />
										</copy>

										<!-- Copy the custom jnidispatch.dll for Windows XP -->
										<mkdir dir="${project.basedir}/win32/winxp" />
										<copy file="${project.external-resources}/lib/winxp/jnidispatch.dll" todir="${project.basedir}/win32/winxp" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!--
						Plugin to build a Windows installer using the nullsoft scriptable install system (NSIS)
						The "generate-project" goal generates a file "target/project.nsh", which contains the
						definitions for project variables like "${PROJECT_BASEDIR}" that can be used in the
						"pms.nsi" and "setup.nsi" files.
					-->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>nsis-maven-plugin</artifactId>
						<version>1.0-SNAPSHOT</version>
						<executions>
							<execution>
								<id>build-pms-windows</id>
								<configuration>
									<makensisBin>${makensis-bin}</makensisBin>
									<outputFile>${project.build.directory}/UMS.exe</outputFile>
									<setupScript>${project.external-resources}/nsis/pms.nsi</setupScript>
								</configuration>
								<phase>package</phase>
								<goals>
									<goal>generate-project</goal>
									<goal>compile</goal>
								</goals>
							</execution>

							<execution>
								<id>build-setup-windows</id>
								<configuration>
									<makensisBin>${makensis-bin}</makensisBin>
									<outputFile>${project.build.directory}/UMS-setup.exe</outputFile>
									<setupScript>${project.external-resources}/nsis/setup.nsi</setupScript>
								</configuration>
								<phase>package</phase>
								<goals>
									<goal>generate-project</goal>
									<goal>compile</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux-arm64</id>
			<!--
				this setting does the right thing on Linux
				and is needed for the Hudson profile to work
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>

							<!-- Assemble the distribution file. -->
							<execution>
								<id>build-pms-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-linux-arm64.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Use the antrun plugin to:

						Download the FFmpeg binary to ${project.binaries}
						Copy the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-linux</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the binaries folder exists -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/linux" />
										<mkdir dir="${project.binaries}/linux/arm64" />
										<mkdir dir="${project.binaries}/linux/arm64/ffmpeg" />

										<!-- Download binaries -->
										<get src="${project.binaries-base}/linux/arm64/ffmpeg/ffmpeg?p=${binary-revision}" dest="${project.binaries}/linux/arm64/ffmpeg/ffmpeg" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>copy-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
											tofile="${project.basedir}/target/ums.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux-armel</id>
			<!--
				this setting does the right thing on Linux
				and is needed for the Hudson profile to work
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>

							<!-- Assemble the distribution file. -->
							<execution>
								<id>build-pms-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-linux-armel.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Use the antrun plugin to:

						Download the FFmpeg binary to ${project.binaries}
						Copy the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-linux</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the binaries folder exists -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/linux" />
										<mkdir dir="${project.binaries}/linux/armel" />
										<mkdir dir="${project.binaries}/linux/armel/ffmpeg" />

										<!-- Download binaries -->
										<get src="${project.binaries-base}/linux/armel/ffmpeg/ffmpeg?p=${binary-revision}" dest="${project.binaries}/linux/armel/ffmpeg/ffmpeg" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>copy-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
											tofile="${project.basedir}/target/ums.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux-armhf</id>
			<!--
				this setting does the right thing on Linux
				and is needed for the Hudson profile to work
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>

							<!-- Assemble the distribution file. -->
							<execution>
								<id>build-pms-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-linux-armhf.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Use the antrun plugin to:

						Download the FFmpeg binary to ${project.binaries}
						Copy the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-linux</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the binaries folder exists -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/linux" />
										<mkdir dir="${project.binaries}/linux/armhf" />
										<mkdir dir="${project.binaries}/linux/armhf/ffmpeg" />

										<!-- Download binaries -->
										<get src="${project.binaries-base}/linux/armhf/ffmpeg/ffmpeg?p=${binary-revision}" dest="${project.binaries}/linux/armhf/ffmpeg/ffmpeg" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>copy-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
											tofile="${project.basedir}/target/ums.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux-x86</id>
			<!--
				this setting does the right thing on Linux
				and is needed for the Hudson profile to work
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>

							<!-- Assemble the distribution file. -->
							<execution>
								<id>build-pms-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-linux-x86.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Use the antrun plugin to:

						Download the binaries to ${project.binaries}
						Copy the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-linux</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the binaries folder exists -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/linux" />
										<mkdir dir="${project.binaries}/linux/x86" />
										<mkdir dir="${project.binaries}/linux/x86/ffmpeg" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/bin" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/conf" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/lib" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/conf/management" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/conf/sdp" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/conf/security" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/conf/security/policy" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/conf/security/policy/limited" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/conf/security/policy/unlimited" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.base" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.compiler" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.datatransfer" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.desktop" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.instrument" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.logging" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.management" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.management.rmi" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.naming" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.net.http" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.prefs" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.rmi" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.scripting" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.se" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.security.jgss" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.security.sasl" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.smartcardio" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.sql" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.sql.rowset" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.transaction.xa" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.xml" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/java.xml.crypto" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.accessibility" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.charsets" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.cryptoki" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.ec" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.dynalink" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.httpserver" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.incubator.foreign" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.jdwp.agent" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.jfr" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.jsobject" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.localedata" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.management" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.management.agent" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.management.jfr" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.naming.dns" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.naming.rmi" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.net" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.nio.mapmode" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.sctp" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.security.auth" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.security.jgss" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.unsupported" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.xml.dom" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/legal/jdk.zipfs" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/lib/client" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/lib/jfr" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/lib/security" />
										<mkdir dir="${project.binaries}/linux/x86/jre15/lib/server" />

										<!-- Download binaries -->
										<get src="${project.binaries-base}/linux/x86/ffmpeg/ffmpeg?p=${binary-revision}" dest="${project.binaries}/linux/x86/ffmpeg/ffmpeg" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/tsMuxeR?p=${binary-revision}" dest="${project.binaries}/linux/x86/tsMuxeR" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/tsMuxeR-new?p=${binary-revision}" dest="${project.binaries}/linux/x86/tsMuxeR-new" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/tsMuxeR_licence.txt?p=${binary-revision}" dest="${project.binaries}/linux/x86/tsMuxeR_license.txt" usetimestamp="true" />

										<get src="${project.binaries-base}/linux/x86/jre15/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/readme.txt?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/readme.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/release?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/release" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/bin/java?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/bin/java" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/bin/jfr?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/bin/jfr" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/bin/jrunscript?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/bin/jrunscript" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/bin/keytool?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/bin/keytool" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/bin/rmid?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/bin/rmid" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/bin/rmiregistry?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/bin/rmiregistry" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/logging.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/logging.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/net.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/net.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/sound.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/sound.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/management/jmxremote.access?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/management/jmxremote.access" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/management/jmxremote.password.template?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/management/jmxremote.password.template" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/management/management.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/management/management.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/sdp/sdp.conf.template?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/sdp/sdp.conf.template" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/java.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/java.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/java.security?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/java.security" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/policy/README.txt?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/policy/README.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/policy/limited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/policy/limited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/policy/limited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/policy/limited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/policy/limited/exempt_local.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/policy/limited/exempt_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/policy/unlimited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/policy/unlimited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/conf/security/policy/unlimited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/conf/security/policy/unlimited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/aes.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/aes.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/asm.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/asm.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/cldr.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/c-libutl.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/c-libutl.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/icu.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/icu.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/public_suffix.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/public_suffix.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.base/unicode.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.base/unicode.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.datatransfer/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.datatransfer/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.datatransfer/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.datatransfer/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/colorimaging.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/colorimaging.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/freetype.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/freetype.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/giflib.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/giflib.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/harfbuzz.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/harfbuzz.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/jpeg.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/jpeg.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/lcms.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/lcms.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/libpng.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/libpng.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/mesa3d.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/mesa3d.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.desktop/xwd.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.desktop/xwd.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.instrument/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.instrument/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.instrument/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.instrument/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.instrument/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.instrument/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.logging/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.logging/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.logging/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.logging/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.logging/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.logging/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.management.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.management.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.management.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.management.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.naming/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.naming/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.naming/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.naming/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.naming/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.naming/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.net.http/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.net.http/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.net.http/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.net.http/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.net.http/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.net.http/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.prefs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.prefs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.prefs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.prefs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.prefs/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.prefs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.scripting/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.scripting/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.scripting/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.scripting/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.scripting/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.scripting/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.se/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.se/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.se/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.se/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.se/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.se/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.security.sasl/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.security.sasl/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.security.sasl/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.security.sasl/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.smartcardio/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.smartcardio/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.smartcardio/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.smartcardio/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.smartcardio/pcsclite.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.smartcardio/pcsclite.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.sql/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.sql/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.sql/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.sql/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.sql/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.sql/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.sql.rowset/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.sql.rowset/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.sql.rowset/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.sql.rowset/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.transaction.xa/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.transaction.xa/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.transaction.xa/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.transaction.xa/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/bcel.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/bcel.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/dom.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/dom.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/jcup.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/jcup.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/xalan.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/xalan.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml/xerces.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml/xerces.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml.crypto/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml.crypto/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml.crypto/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml.crypto/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/java.xml.crypto/santuario.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/java.xml.crypto/santuario.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.accessibility/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.accessibility/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.accessibility/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.accessibility/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.charsets/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.charsets/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.charsets/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.charsets/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.cryptoki/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.cryptoki/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.cryptoki/pkcs11wrapper.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.cryptoki/pkcs11wrapper.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.ec/ecc.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.ec/ecc.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.crypto.ec/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.crypto.ec/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.dynalink/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.dynalink/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.dynalink/dynalink.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.dynalink/dynalink.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.dynalink/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.dynalink/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.httpserver/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.httpserver/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.httpserver/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.httpserver/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.incubator.foreign/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.incubator.foreign/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jdwp.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jdwp.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jsobject/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jsobject/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.jsobject/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.jsobject/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.localedata/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.localedata/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.localedata/cldr.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.localedata/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.localedata/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.localedata/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.localedata/thaidict.md?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.localedata/thaidict.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.management.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.management.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.naming.dns/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.naming.dns/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.naming.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.naming.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.net/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.net/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.net/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.net/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.net/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.net/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.nio.mapmode/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.nio.mapmode/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.sctp/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.sctp/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.sctp/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.sctp/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.security.auth/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.security.auth/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.security.auth/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.security.auth/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.unsupported/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.unsupported/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.unsupported/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.unsupported/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.xml.dom/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.xml.dom/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.zipfs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.zipfs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/legal/jdk.zipfs/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/legal/jdk.zipfs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/classlist?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/classlist" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/jexec?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/jexec" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/jrt-fs.jar?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/jrt-fs.jar" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/jspawnhelper?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/jspawnhelper" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/jvm.cfg?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/jvm.cfg" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libawt.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libawt.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libawt_headless.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libawt_headless.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libawt_xawt.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libawt_xawt.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libdt_socket.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libdt_socket.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libextnet.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libextnet.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libfontmanager.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libfontmanager.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libfreetype.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libfreetype.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libinstrument.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libinstrument.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libj2gss.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libj2gss.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libj2pcsc.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libj2pcsc.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libj2pkcs11.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libj2pkcs11.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjaas.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjaas.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjava.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjava.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjavajpeg.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjavajpeg.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjawt.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjawt.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjdwp.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjdwp.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjimage.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjimage.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjli.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjli.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjsig.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjsig.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libjsound.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libjsound.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/liblcms.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/liblcms.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libmanagement.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libmanagement.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libmanagement_agent.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libmanagement_agent.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libmanagement_ext.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libmanagement_ext.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libmlib_image.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libmlib_image.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libnet.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libnet.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libnio.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libnio.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libprefs.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libprefs.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/librmi.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/librmi.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libsctp.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libsctp.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libsplashscreen.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libsplashscreen.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libsunec.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libsunec.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libverify.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libverify.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/libzip.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/libzip.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/modules?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/modules" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/psfont.properties.ja?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/psfont.properties.ja" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/psfontj2d.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/psfontj2d.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/tzdb.dat?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/tzdb.dat" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/client/libjsig.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/client/libjsig.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/client/libjvm.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/client/libjvm.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/jfr/default.jfc?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/jfr/default.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/jfr/profile.jfc?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/jfr/profile.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/security/blacklisted.certs?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/security/blacklisted.certs" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/security/cacerts?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/security/cacerts" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/security/default.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/security/default.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/security/public_suffix_list.dat?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/security/public_suffix_list.dat" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/server/classes.jsa?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/server/classes.jsa" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/server/libjsig.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/server/libjsig.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86/jre15/lib/server/libjvm.so?p=${binary-revision}" dest="${project.binaries}/linux/x86/jre15/lib/server/libjvm.so" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>copy-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
											tofile="${project.basedir}/target/ums.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linux-x86_64</id>
			<!--
				this setting does the right thing on Linux
				and is needed for the Hudson profile to work
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>

							<!-- Assemble the distribution file. -->
							<execution>
								<id>build-pms-linux</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-linux-x86_64.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Use the antrun plugin to:

						Download the binaries to ${project.binaries}
						Copy the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-linux</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the binaries folder exists -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/linux" />
										<mkdir dir="${project.binaries}/linux/x86_64" />
										<mkdir dir="${project.binaries}/linux/x86_64/ffmpeg" />

										<mkdir dir="${project.binaries}/linux/x86_64/jre" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/bin" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/conf" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/lib" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/conf/management" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/conf/sdp" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/conf/security" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/conf/security/policy" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/conf/security/policy/limited" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/conf/security/policy/unlimited" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.base" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.compiler" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.datatransfer" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.desktop" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.instrument" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.logging" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.management" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.management.rmi" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.naming" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.net.http" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.prefs" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.rmi" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.scripting" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.se" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.security.jgss" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.security.sasl" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.smartcardio" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.sql" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.sql.rowset" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.transaction.xa" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.xml" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/java.xml.crypto" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.accessibility" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.aot" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.charsets" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.compiler" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.ec" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.dynalink" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.httpserver" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.foreign" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.jpackage" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.opt" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.ci" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler.management" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdeps" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdwp.agent" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.jfr" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.jlink" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.jsobject" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.localedata" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.management" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.agent" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.jfr" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.dns" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.rmi" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.net" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.nio.mapmode" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.sctp" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.auth" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.jgss" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.unsupported" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.xml.dom" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/legal/jdk.zipfs" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/lib/jfr" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/lib/security" />
										<mkdir dir="${project.binaries}/linux/x86_64/jre15/lib/server" />

										<!-- Download binaries -->
										<get src="${project.binaries-base}/linux/x86_64/ffmpeg/ffmpeg?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/ffmpeg/ffmpeg" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/tsMuxeR?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/tsMuxeR" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/tsMuxeR-new?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/tsMuxeR-new" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/tsMuxeR_licence.txt?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/tsMuxeR_license.txt" usetimestamp="true" />

										<get src="${project.binaries-base}/linux/x86_64/jre15/release?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/release" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jaotc?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jaotc" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/java?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/java" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/javac?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/javac" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/javap?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/javap" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jdeprscan?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jdeprscan" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jdeps?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jdeps" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jfr?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jfr" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jimage?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jimage" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jlink?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jlink" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jmod?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jmod" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jpackage?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jpackage" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/jrunscript?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/jrunscript" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/keytool?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/keytool" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/rmid?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/rmid" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/rmiregistry?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/rmiregistry" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/bin/serialver?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/bin/serialver" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/logging.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/logging.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/net.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/net.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/sound.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/sound.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/management/jmxremote.access?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/management/jmxremote.access" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/management/jmxremote.password.template?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/management/jmxremote.password.template" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/management/management.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/management/management.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/sdp/sdp.conf.template?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/sdp/sdp.conf.template" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/java.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/java.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/java.security?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/java.security" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/policy/README.txt?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/policy/README.txt" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/policy/limited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/policy/limited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/policy/limited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/policy/limited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/policy/limited/exempt_local.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/policy/limited/exempt_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/policy/unlimited/default_local.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/policy/unlimited/default_local.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/conf/security/policy/unlimited/default_US_export.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/conf/security/policy/unlimited/default_US_export.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/aes.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/aes.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/asm.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/asm.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/cldr.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/c-libutl.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/c-libutl.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/icu.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/icu.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/public_suffix.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/public_suffix.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.base/unicode.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.base/unicode.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.datatransfer/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.datatransfer/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.datatransfer/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.datatransfer/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.datatransfer/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/colorimaging.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/colorimaging.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/giflib.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/giflib.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/harfbuzz.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/harfbuzz.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/jpeg.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/jpeg.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/lcms.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/lcms.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/libpng.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/libpng.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/mesa3d.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/mesa3d.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.desktop/xwd.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.desktop/xwd.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.instrument/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.instrument/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.instrument/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.instrument/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.instrument/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.instrument/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.logging/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.logging/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.logging/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.logging/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.logging/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.logging/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.management.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.management.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.management.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.management.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.management.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.naming/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.naming/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.naming/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.naming/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.naming/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.naming/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.net.http/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.net.http/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.net.http/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.net.http/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.net.http/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.net.http/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.prefs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.prefs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.prefs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.prefs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.prefs/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.prefs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.scripting/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.scripting/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.scripting/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.scripting/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.scripting/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.scripting/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.se/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.se/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.se/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.se/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.se/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.se/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.security.sasl/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.security.sasl/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.security.sasl/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.security.sasl/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.security.sasl/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.smartcardio/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.smartcardio/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.smartcardio/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.smartcardio/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.smartcardio/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.smartcardio/pcsclite.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.smartcardio/pcsclite.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.sql/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.sql/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.sql/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.sql/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.sql/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.sql/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.sql.rowset/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.sql.rowset/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.sql.rowset/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.sql.rowset/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.sql.rowset/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.transaction.xa/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.transaction.xa/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.transaction.xa/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.transaction.xa/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.transaction.xa/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/bcel.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/bcel.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/dom.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/dom.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/jcup.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/jcup.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/xalan.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/xalan.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml/xerces.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml/xerces.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml.crypto/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml.crypto/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml.crypto/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml.crypto/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml.crypto/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/java.xml.crypto/santuario.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/java.xml.crypto/santuario.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.accessibility/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.accessibility/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.accessibility/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.accessibility/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.accessibility/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.aot/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.aot/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.aot/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.aot/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.aot/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.aot/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.charsets/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.charsets/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.charsets/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.charsets/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.charsets/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/pkcs11cryptotoken.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/pkcs11wrapper.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.cryptoki/pkcs11wrapper.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.ec/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.ec/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.ec/ecc.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.ec/ecc.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.crypto.ec/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.crypto.ec/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.dynalink/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.dynalink/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.dynalink/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.dynalink/dynalink.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.dynalink/dynalink.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.dynalink/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.dynalink/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.httpserver/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.httpserver/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.httpserver/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.httpserver/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.httpserver/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.foreign/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.foreign/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.incubator.foreign/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.foreign/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.incubator.jpackage/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.jpackage/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.incubator.jpackage/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.jpackage/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.incubator.jpackage/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.incubator.jpackage/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.opt/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.opt/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.opt/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.opt/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.opt/jopt-simple.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.opt/jopt-simple.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.opt/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.opt/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.ci/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.ci/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.ci/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.ci/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.ci/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.ci/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.internal.vm.compiler.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jdeps/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdeps/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jdeps/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdeps/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jdeps/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdeps/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdwp.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdwp.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jdwp.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jdwp.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jlink/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jlink/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jlink/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jlink/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jlink/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jlink/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jsobject/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jsobject/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jsobject/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.jsobject/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.jsobject/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.localedata/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.localedata/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.localedata/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.localedata/cldr.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.localedata/cldr.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.localedata/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.localedata/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.localedata/thaidict.md?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.localedata/thaidict.md" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.agent/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management.agent/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.agent/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management.agent/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.agent/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.jfr/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.jfr/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.management.jfr/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.management.jfr/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.dns/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.dns/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.naming.dns/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.dns/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.rmi/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.rmi/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.naming.rmi/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.naming.rmi/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.net/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.net/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.net/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.net/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.net/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.net/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.nio.mapmode/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.nio.mapmode/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.nio.mapmode/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.nio.mapmode/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.sctp/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.sctp/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.sctp/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.sctp/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.sctp/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.auth/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.security.auth/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.auth/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.security.auth/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.auth/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.jgss/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.jgss/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.security.jgss/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.security.jgss/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.unsupported/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.unsupported/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.unsupported/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.unsupported/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.unsupported/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.xml.dom/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.xml.dom/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.xml.dom/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.xml.dom/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.zipfs/ADDITIONAL_LICENSE_INFO" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.zipfs/ASSEMBLY_EXCEPTION?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.zipfs/ASSEMBLY_EXCEPTION" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/legal/jdk.zipfs/LICENSE?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/legal/jdk.zipfs/LICENSE" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/classlist?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/classlist" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/ct.sym?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/ct.sym" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/jexec?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/jexec" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/jrt-fs.jar?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/jrt-fs.jar" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/jspawnhelper?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/jspawnhelper" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/jvm.cfg?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/jvm.cfg" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libawt.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libawt.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libawt_headless.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libawt_headless.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libawt_xawt.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libawt_xawt.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libdt_socket.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libdt_socket.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libextnet.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libextnet.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libfontmanager.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libfontmanager.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libinstrument.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libinstrument.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libj2gss.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libj2gss.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libj2pcsc.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libj2pcsc.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libj2pkcs11.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libj2pkcs11.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjaas.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjaas.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjava.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjava.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjavajpeg.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjavajpeg.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjawt.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjawt.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjdwp.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjdwp.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjimage.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjimage.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjli.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjli.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjsig.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjsig.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libjsound.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libjsound.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/liblcms.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/liblcms.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libmanagement.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libmanagement.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libmanagement_agent.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libmanagement_agent.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libmanagement_ext.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libmanagement_ext.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libmlib_image.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libmlib_image.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libnet.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libnet.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libnio.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libnio.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libprefs.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libprefs.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/librmi.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/librmi.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libsctp.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libsctp.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libsplashscreen.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libsplashscreen.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libsunec.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libsunec.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libverify.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libverify.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/libzip.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/libzip.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/modules?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/modules" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/psfont.properties.ja?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/psfont.properties.ja" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/psfontj2d.properties?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/psfontj2d.properties" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/tzdb.dat?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/tzdb.dat" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/jfr/default.jfc?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/jfr/default.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/jfr/profile.jfc?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/jfr/profile.jfc" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/security/blacklisted.certs?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/security/blacklisted.certs" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/security/cacerts?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/security/cacerts" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/security/default.policy?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/security/default.policy" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/security/public_suffix_list.dat?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/security/public_suffix_list.dat" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/server/classes.jsa?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/server/classes.jsa" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/server/classes_nocoops.jsa?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/server/classes_nocoops.jsa" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/server/libjsig.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/server/libjsig.so" usetimestamp="true" />
										<get src="${project.binaries-base}/linux/x86_64/jre15/lib/server/libjvm.so?p=${binary-revision}" dest="${project.binaries}/linux/x86_64/jre15/lib/server/libjvm.so" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>copy-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
											tofile="${project.basedir}/target/ums.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
			Testing profile: For running our automated tests - does not download binaries
		-->
		<profile>
			<id>testing</id>
			<!--
				this setting does the right thing on Linux
				and is needed for the Hudson profile to work
			-->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-testing</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>

							<!-- Assemble the distribution file. -->
							<execution>
								<id>build-pms-testing</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-testing.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Use the antrun plugin to:

						Copy ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>copy-jar-with-dependencies-test</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
											tofile="${project.basedir}/target/ums.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
			macOS 10.15 (Catalina) onwards
			Note: This does not make the disk image (.dmg), see the wiki for instructions https://github.com/UniversalMediaServer/UniversalMediaServer/wiki/How-to-build-UMS#building-the-macos-disk-image
		-->
		<profile>
			<id>macos</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>${maven-enforcer-plugin-version}</version>
						<executions>
							<execution>
								<id>enforce-java</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireJavaVersion>
											<version>[1.8.0-51,15.999.999]</version>
										</requireJavaVersion>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Plugin to download binaries before assembly
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-macos</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the binaries folder exists -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/osx" />
										<mkdir dir="${project.binaries}/osx/10.15" />

										<!-- Download binaries -->
										<get src="${project.binaries-base}/osx/dcraw?p=${binary-revision}" dest="${project.binaries}/osx/dcraw" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/ffmpeg?p=${binary-revision}" dest="${project.binaries}/osx/ffmpeg" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/flac?p=${binary-revision}" dest="${project.binaries}/osx/flac" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/libmediainfo.dylib?p=${binary-revision}" dest="${project.binaries}/libmediainfo.dylib" usetimestamp="true" />
										<get src="${project.binaries-base}/MediaInfo-License.html?p=${binary-revision}" dest="${project.binaries}/MediaInfo-License.html" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/10.15/mencoder?p=${binary-revision}" dest="${project.binaries}/osx/10.15/mencoder" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/10.15/mplayer?p=${binary-revision}" dest="${project.binaries}/osx/10.15/mplayer" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/10.15/tsMuxeR?p=${binary-revision}" dest="${project.binaries}/osx/10.15/tsMuxeR" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/10.15/tsMuxeR-new?p=${binary-revision}" dest="${project.binaries}/osx/10.15/tsMuxeR-new" usetimestamp="true" />

										<!-- MediaInfo library needs to be in the standard library path to be found -->
										<copy file="${project.binaries}/libmediainfo.dylib" todir="${project.basedir}" />
										<copy file="${project.binaries}/MediaInfo-License.html" todir="${project.basedir}" />

										<!-- Make all downloaded binaries executable -->
										<chmod dir="${project.binaries}/osx" perm="a+x" includes="*" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>prepare-package-macos</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- Make sure the target folder exists -->
										<mkdir dir="${project.build.directory}/${project.build.finalName}-distribution" />

										<!-- Create the shortcut to the Applications folder -->
										<exec executable="/usr/bin/osascript">
											<arg value="-e" />
											<arg value="tell application &quot;Finder&quot;" />
											<arg value="-e" />
											<arg value="set src to POSIX file &quot;/Applications&quot;" />
											<arg value="-e" />
											<arg value="set dest to POSIX file &quot;${project.build.directory}/${project.build.finalName}-distribution&quot;" />
											<arg value="-e" />
											<arg value="make new alias file to folder src at folder dest" />
											<arg value="-e" />
											<arg value="end tell" />
										</exec>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>package app</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<property environment="env" />
									<target name="bundle">
										<!-- Obtain path to the selected JRE -->
										<exec executable="/usr/libexec/java_home"
													failonerror="true"
													outputproperty="runtime">
											<arg value="-v"/>
											<arg value="14"/>
										</exec>

										<!-- This appbundler version is 12422ee from https://github.com/TheInfiniteKind/appbundler -->
										<taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask"
											classpath="${basedir}/src/main/external-resources/lib/appbundler-1.0ea.jar"/>
										<bundleapp 
											jrePreferred="true"
											outputdirectory="${project.build.directory}/${project.build.finalName}-distribution"
											name="${project.name}"
											displayname="${project.name}"
											executableName="UMS"
											identifier="net.pms.PMS"
											shortversion="${project.version.short}"
											version="${project.version}"
											icon="${project.basedir}/src/main/resources/images/logo.icns"
											applicationCategory="public.app-category.entertainment"
											workingdirectory="$APP_ROOT/Contents/Resources"
											mainclassname="net.pms.PMS"
										>
											<!-- <runtime dir="${runtime}"/> -->
											<!-- the following is needed because jrePreferred option doesn't work, see https://github.com/TheInfiniteKind/appbundler/issues/73 -->
											<runtime dir="/Library/Java/JavaVirtualMachines/adoptopenjdk-15.jre/Contents/Home"/>
											<classpath file="${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar"/>
											<option value="-Xmx1280M"/>
											<option value="-Xss16M"/>
											<option value="-Dfile.encoding=UTF-8"/>
											<option value="-Djava.net.preferIPv4Stack=true"/>
											<option value="-Xdock:name=UMS"/>
										</bundleapp>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-macos</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
							<!--
								Assemble the files in the right place before
								moving them to the app Bundle.
							-->
							<execution>
								<id>make-assembly-macos</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-macos.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
			macOS pre-10.15 (Catalina)
			Note: This does not make the disk image (.dmg), see the wiki for instructions https://github.com/UniversalMediaServer/UniversalMediaServer/wiki/How-to-build-UMS#building-the-macos-disk-image
		-->
		<profile>
			<id>macos-pre1015</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>${maven-enforcer-plugin-version}</version>
						<executions>
							<execution>
								<id>enforce-java</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireJavaVersion>
											<version>[1.8.0-51,15.999.999]</version>
										</requireJavaVersion>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Plugin to download binaries before assembly
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-macos-pre1015</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<!-- Make sure the binaries folder exists -->
										<mkdir dir="${project.binaries}" />
										<mkdir dir="${project.binaries}/osx" />

										<!-- Download binaries -->
										<get src="${project.binaries-base}/osx/dcraw?p=${binary-revision}" dest="${project.binaries}/osx/dcraw" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/ffmpeg?p=${binary-revision}" dest="${project.binaries}/osx/ffmpeg" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/flac?p=${binary-revision}" dest="${project.binaries}/osx/flac" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/libmediainfo.dylib?p=${binary-revision}" dest="${project.binaries}/libmediainfo.dylib" usetimestamp="true" />
										<get src="${project.binaries-base}/MediaInfo-License.html?p=${binary-revision}" dest="${project.binaries}/MediaInfo-License.html" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/mencoder?p=${binary-revision}" dest="${project.binaries}/osx/mencoder" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/mplayer?p=${binary-revision}" dest="${project.binaries}/osx/mplayer" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/tsMuxeR?p=${binary-revision}" dest="${project.binaries}/osx/tsMuxeR" usetimestamp="true" />
										<get src="${project.binaries-base}/osx/tsMuxeR-new?p=${binary-revision}" dest="${project.binaries}/osx/tsMuxeR-new" usetimestamp="true" />

										<!-- MediaInfo library needs to be in the standard library path to be found -->
										<copy file="${project.binaries}/libmediainfo.dylib" todir="${project.basedir}" />
										<copy file="${project.binaries}/MediaInfo-License.html" todir="${project.basedir}" />

										<!-- Make all downloaded binaries executable -->
										<chmod dir="${project.binaries}/osx" perm="a+x" includes="*" />
									</target>
								</configuration>
							</execution>
							<execution>
								<id>prepare-package-macos-pre1015</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<!-- Make sure the target folder exists -->
										<mkdir dir="${project.build.directory}/${project.build.finalName}-distribution" />

										<!-- Create the shortcut to the Applications folder -->
										<exec executable="/usr/bin/osascript">
											<arg value="-e" />
											<arg value="tell application &quot;Finder&quot;" />
											<arg value="-e" />
											<arg value="set src to POSIX file &quot;/Applications&quot;" />
											<arg value="-e" />
											<arg value="set dest to POSIX file &quot;${project.build.directory}/${project.build.finalName}-distribution&quot;" />
											<arg value="-e" />
											<arg value="make new alias file to folder src at folder dest" />
											<arg value="-e" />
											<arg value="end tell" />
										</exec>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>package app</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<property environment="env" />
									<target name="bundle">
										<!-- Obtain path to the selected JRE -->
										<exec executable="/usr/libexec/java_home"
													failonerror="true"
													outputproperty="runtime">
											<arg value="-v"/>
											<arg value="14"/>
										</exec>

										<!-- This appbundler version is 12422ee from https://github.com/TheInfiniteKind/appbundler -->
										<taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask"
											classpath="${basedir}/src/main/external-resources/lib/appbundler-1.0ea.jar"/>
										<bundleapp 
											jrePreferred="true"
											outputdirectory="${project.build.directory}/${project.build.finalName}-distribution"
											name="${project.name}"
											displayname="${project.name}"
											executableName="UMS"
											identifier="net.pms.PMS"
											shortversion="${project.version.short}"
											version="${project.version}"
											icon="${project.basedir}/src/main/resources/images/logo.icns"
											applicationCategory="public.app-category.entertainment"
											workingdirectory="$APP_ROOT/Contents/Resources"
											mainclassname="net.pms.PMS"
										>
											<!-- <runtime dir="${runtime}"/> -->
											<!-- the following is needed because jrePreferred option doesn't work, see https://github.com/TheInfiniteKind/appbundler/issues/73 -->
											<runtime dir="/Library/Java/JavaVirtualMachines/adoptopenjdk-15.jre/Contents/Home"/>
											<classpath file="${project.build.directory}/${project.build.finalName}-jar-with-dependencies.jar"/>
											<option value="-Xmx1280M"/>
											<option value="-Xss16M"/>
											<option value="-Dfile.encoding=UTF-8"/>
											<option value="-Djava.net.preferIPv4Stack=true"/>
											<option value="-Xdock:name=UMS"/>
										</bundleapp>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<!-- Assemble a jar with dependencies -->
							<execution>
								<id>make-jar-with-dependencies-macos-pre1015</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
							<!--
								Assemble the files in the right place before
								moving them to the app Bundle.
							-->
							<execution>
								<id>make-assembly-macos-pre1015</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/assembly-macos-pre10.15.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--
			Hudson (windows-jar): minimal profile that builds ums.jar with the
			Windows JNA. The POSIX JNA causes snapshot builds to crash the JVM on
			Windows, whereas the Windows JNA only disables MediaInfo for Ubuntu
			users, who can still use ffmpeg.

			Another difference from the other profiles is that we don't download the
			binaries or build the tarball.
		-->
		<profile>
			<id>windows-jar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<property>
					<name>env.HUDSON_URL</name>
				</property>
			</activation>

			<build>
				<plugins>
					<!-- Plugin to assemble a jar with dependencies -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<executions>
							<execution>
								<id>make-jar-with-dependencies-win</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
									</descriptors>
									<archive>
										<manifest>
											<mainClass>net.pms.PMS</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries> <!-- see above for documentation -->
										</manifest>
									</archive>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!--
						Use the antrun plugin to: copy the
						ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>copy-jar-with-dependencies-linux</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
													tofile="${project.basedir}/target/pms.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<!--
			This profile allows running UMS from inside Eclipse
			(Requires a "mvn clean package" to download the binaries first)
		-->
		<profile>
			<id>run-from-eclipse</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin-version}</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<classpathScope>test</classpathScope>
									<mainClass>net.pms.PMS</mainClass>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
			Quick run profiles: Builds, replaces and runs ums.jar in the default installation directory.
			For extra quickness, run with the skipTests flag, like mvn -P quickrun-windows package -DskipTests
		-->
		<profile>
			<id>quickrun-windows</id>
			<build>
				<plugins>
					<!-- Plugin to assemble a jar with dependencies -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
							</descriptors>
							<archive>
								<manifest>
									<mainClass>net.pms.PMS</mainClass>
									<!--
										this is required to make the ImageIo image "plugins" provided by jai-imageio-core-standalone work.
										without it, the following exception is thrown when UMS starts:

										Configuration error: java.util.ServiceConfigurationError: javax.imageio.spi.ImageInputStreamSpi:
											Provider com.sun.media.imageioimpl.stream.ChannelImageInputStreamSpi could not be instantiated:
												java.lang.IllegalArgumentException: vendorName == null!

										See: https://thierrywasyl.wordpress.com/2009/07/24/jai-how-to-solve-vendorname-null-exception/
									-->
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>make-jar-with-dependencies-win</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!--
						Plugin to move the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>prepare-package-windows</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
													tofile="C:/Program Files (x86)/Universal Media Server/ums.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>C:/Program Files (x86)/Universal Media Server/web/</outputDirectory>
									<fileMode>0644</fileMode>
									<directoryMode>0755</directoryMode>
									<resources>
										<resource>
											<directory>${project.external-resources}/web/</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin-version}</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>C:/Program Files (x86)/Universal Media Server/UMS.exe</executable>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>quickrun-macos</id>
			<build>
				<plugins>
					<!-- Plugin to assemble a jar with dependencies -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
							</descriptors>
							<archive>
								<manifest>
									<mainClass>net.pms.PMS</mainClass>
									<!--
										this is required to make the ImageIo image "plugins" provided by jai-imageio-core-standalone work.
										without it, the following exception is thrown when UMS starts:

										Configuration error: java.util.ServiceConfigurationError: javax.imageio.spi.ImageInputStreamSpi:
											Provider com.sun.media.imageioimpl.stream.ChannelImageInputStreamSpi could not be instantiated:
												java.lang.IllegalArgumentException: vendorName == null!

										See: https://thierrywasyl.wordpress.com/2009/07/24/jai-how-to-solve-vendorname-null-exception/
									-->
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>make-jar-with-dependencies-win</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!--
						Plugin to move the ums-x.x.x-jar-with-dependencies.jar to ums.jar
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>prepare-package-windows</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.basedir}/target/${project.artifactId}-${project.version}-jar-with-dependencies.jar"
											tofile="/Applications/Universal Media Server.app/Contents/Java/${project.artifactId}-${project.version}-jar-with-dependencies.jar" overwrite="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Copy Web resources -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>/Applications/Universal Media Server.app/Contents/Resources/web</outputDirectory>
									<resources>
										<resource>
											<directory>${project.external-resources}/web/</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>${exec-maven-plugin-version}</version>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>/Applications/Universal Media Server.app/Contents/MacOS/UMS</executable>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--
			Testing profiles below
		-->
		<profile>
			<id>testing-windows</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-windows</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<mkdir dir="${project.binaries}" />
										<get src="${project.binaries-base}/MediaInfo64.dll?p=${binary-revision}" dest="${project.basedir}/MediaInfo64.dll" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>testing-macos</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-windows</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<mkdir dir="${project.binaries}" />
										<get src="${project.binaries-base}/osx/libmediainfo.dylib?p=${binary-revision}" dest="${project.basedir}/libmediainfo.dylib" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>linter</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin-version}</version>
						<configuration>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/jar-with-dependencies.xml</descriptor>
							</descriptors>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin-version}</version>
						<executions>
							<execution>
								<id>process-resources-windows</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target unless="offline">
										<mkdir dir="${project.binaries}" />
										<get src="${project.binaries-base}/MediaInfo64.dll?p=${binary-revision}" dest="${project.basedir}/MediaInfo64.dll" usetimestamp="true" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Checkstyle report -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>3.1.2</version>
						<dependencies>
							<dependency>
								<groupId>com.puppycrawl.tools</groupId>
								<artifactId>checkstyle</artifactId>
								<version>8.41.1</version>
							</dependency>
						</dependencies>
						<configuration>
							<configLocation>CheckStyle.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<linkXRef>false</linkXRef>
						</configuration>
						<executions>
							<execution>
								<id>validate</id>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
