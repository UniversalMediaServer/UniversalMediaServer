name: Universal Media Server CI

on: [push, pull_request]

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        # test against two different xcode version on MacOS
        xcode: [ 9.4.1, latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install dependencies from Maven
        run: mvn external:install
      - name: Run tests (XCode ${{ matrix.xcode }})
        run: DEVELOPER_DIR=/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer && mvn verify -P testing-macos

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install dependencies from Maven
        run: mvn external:install
      - name: Run tests
        run: mvn verify -P testing-windows

  linux-focal:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        # test against multiple major Java versions
        java: [ 8, 15 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install dependencies from Maven
        run: mvn external:install
      - name: Run tests
        run: |
          sudo apt-get -y install libmms0
          wget https://mediaarea.net/download/binary/libzen0/0.4.39/libzen0v5_0.4.39-1_amd64.xUbuntu_20.04.deb
          sudo dpkg -i libzen0v5_0.4.39-1_amd64.xUbuntu_20.04.deb
          wget https://mediaarea.net/download/binary/libmediainfo0/21.03/libmediainfo0v5_21.03-1_amd64.xUbuntu_20.04.deb
          sudo dpkg -i libmediainfo0v5_21.03-1_amd64.xUbuntu_20.04.deb
          mvn verify -B -V -P testing

  linux-xenial:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        # test against multiple major Java versions
        java: [ 8, 15 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install dependencies from Maven
        run: mvn external:install
      - name: Run tests ( Ubuntu Xenial, Java ${{ matrix.java }} )
        run: |
          sudo apt-get -y install libmms0
          wget https://mediaarea.net/download/binary/libzen0/0.4.39/libzen0v5_0.4.39-1_amd64.xUbuntu_16.04.deb
          sudo dpkg -i libzen0v5_0.4.39-1_amd64.xUbuntu_16.04.deb
          wget https://mediaarea.net/download/binary/libmediainfo0/21.03/libmediainfo0v5_21.03-1_amd64.xUbuntu_16.04.deb
          sudo dpkg -i libmediainfo0v5_21.03-1_amd64.xUbuntu_16.04.deb
          mvn verify -B -V -P testing

  linter:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install dependencies from Maven
        run: mvn external:install
      - name: Run tests
        run: mvn verify -P linter
