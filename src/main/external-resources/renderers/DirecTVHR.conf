#----------------------------------------------------------------------------
# Profile for DirecTV 
# Boxes Tested: H23-600, H25-500, HR34-700 (Genie), HR24-500 (DVR)
# See PS3.conf for a description of all possible configuration options.
#
# This profile is still in an experimental stage.
# You are encouraged to experiment and report back the results on the forums
# at http://www.universalmediaserver.com/forum/
#
# Know Issues: if three or more boxes are trying to watch the same movie at the same time, 
# the third box will jump into someones stream; not intrupting the origional streamer.
# 
#---------------------General informations / detection-----------------------

RendererName=DirecTV HR
RendererIcon=directvhr.png

# UserAgentSearch: regular expression to detect the connected renderer.
# DirecTV has been observed using the following user agents:
#
# User-Agent: Linux/2.6.18-lttng-0.6.41, UPnP/1.0 DIRECTV JHUPnP/1.0 DLNADOC/1.00 DIRECTV VIIV devices INTEL_NMPR/2.1
# User-Agent: Linux/2.6.18.5, UPnP/1.0 DIRECTV JHUPnP/1.0 DLNADOC/1.00 DIRECTV VIIV devices INTEL_NMPR/2.1
# User-Agent: Linux/2.6.31-2.6, UPnP/1.0 DIRECTV JHUPnP/1.0 DLNADOC/1.00 DIRECTV VIIV devices INTEL_NMPR/2.1
# User-Agent: Linux/2.6.31-2.6, UPnP/1.0 DIRECTV JHUPnP/1.0

# Combined regular expression of working user agents
UserAgentSearch=DIRECTV

# UserAgentAdditionalHeaders: additional HTTP header for better detection
UserAgentAdditionalHeader=DLNADOC/1.00 DIRECTV VIIV devices INTEL_NMPR/2.1
UserAgentAdditionalHeaderSearch=

#Basic capabilities
Video=true
Audio=true
Image=true

#--------------------DLNA settings-------------------------------------------


# Use the DLNA feature seek by time and not by range
SeekByTime=true

# Serve different flavors of localization in the DLNA parameters (PAL/NTSC, NA/EU/JP)
# to allow every worldwide renderer to see the files.
DLNALocalizationRequired=true

#--------------------Transcoding/Muxing capabilities-------------------------

# Transcode profiles for video and audio engines
# currently supported: MPEGPSAC3, MPEGTSAC3 or WMV for video, LPCM, WAV or MP3 for audio
TranscodeVideo=MPEGPSAC3
#??????
TranscodeAudio=MP3

# Use default DVD buffer size: false = greater bitrate and faster encoding,
# but can generate incompatible videos, depends of your media renderer
DefaultVBVBufSize=true

# Does the media renderer supports DTS wrapped into LPCM in a mpeg file ?
WrapDTSIntoPCM=false

# Does the Device need Muxing? (false by default)
MuxH264ToMpegTS=true
MuxDTSToMpeg=true
MuxLPCMToMpeg=true

# MIME Changes? (oldmime=newmime|olemime2=newmime2|...)
#MimeTypesChanges=

# Maximum bit rate supported by the media renderer (0=unlimited)
MaxVideoBitrateMbps=8

# Max Width and Height supported by the media renderer (0=unlimited)
MaxVideoWidth=0
MaxVideoHeight=0

# Does the media renderer supports only H264 L4.1 at most?
H264Level41Limited=false

# Does music files need to be resampled at 44.1kHz?
TranscodeAudioTo441kHz=true

# Does the client need to receive transcoded video with minimal delay ?
# (Useful when the client has a small timeout delay)
TranscodeFastStart=true

# Size of the transcoded file (unknown length) sent to the renderer (could
# determine browsing failure/success) Possible values:
# 
#           -1: Specific value working with the PS3, means perfect transcoding
#               and copying support (it is against the DLNA spec though)
#            0: size attribute is NOT sent to the renderer (default value if
#               this parameter isn't used)
# 100000000000: 100Gb, if you want to be sure that the media file is not cut
#               before the end
TranscodedVideoFileSize=-1

#--------------------Misc Settings--------------------------------------------

# Rotate JPEG files based on EXIF information
AutoExifRotate=false

# Disable these once MediaInfo=True works.
# What extensions are forcefully transcoded
# Don't use this if MediaInfo=true, prefer codec configurations

#TranscodeExtensions=mpeg2,lpcm,mp3,wav,jpg,mpegps,mpegts,wmv,avi,mp4,mov,flv,rm,mkv,wavpac,aac,ac3,mpa,ogg,wma,dts,dtshd,truehd,eac3,atrac,flac,ape,ra,mpc,aiff,alac,dv,mpeg1,divx,h264,mjpeg,vc1,png,gif,tiff,bmp,und

# What extensions are forcefully streamed as is (and not transcoded)
# Don't use this if MediaInfo=true, prefer codec configurations

#StreamExtensions=

#--------------------Meat and Potatos----------------------------------------

# CustomMencoderOptions: Overrides the MEncoder custom options in UMS for
# this renderer. The below has been Tweeked for DirecTV MediaShare!

CustomMencoderOptions = -channels 2 -lavdopts debug=0:threads=4 -lavcopts autoaspect=1:vcodec=mpeg2video:acodec=mp2:abitrate=192:threads=8:keyint=0:vqscale=1:vqmin=1:vrc_maxrate=8192:vrc_buf_size=8192 -aid 0 -nosub -noautosub -ofps 24000/1001 -vf scale=1280:720 -lavdopts fast -mc 0.1  -af volnorm,lavcresample=44100 -srate 44100 -o

#hold
# -vf expand=-0:-2,softskip
# keyint=25:vqmax=8:vqmin=3
# added -vf volnorm,
#----------------------------------------------------------------------------
MediaInfo=false

# All supported media formats of this renderer (the rest will be transcoded)
# First steps towards a faster/proper file/codec/mimetype management system (false by default)
# 1- Parse files with mediainfo on Windows/OSX (Linux too if libmediainfo and libzen installed)
# 2- Deprecate following parameters: MuxH264ToMpegTS,MuxDTSToMpeg,MuxLPCMToMpeg,MimeTypesChanges
# 3- The server will skip badly parsed, corrupted files or wrong coding, preventing potential playback errors
# 4- Faster browsing, due to the launch of ffmpeg/mplayer first thumbnailer process with each http client request, rather than in the browse DLNA request
# Use MediaInfo for faster and proper file, codec and mime type management
# system (false by default).
#
# The media parser and this configuration file will recognize the following
# formats and codecs (lower case only, regular expressions are supported).
# Chosen from the most common used and supported formats and codecs.
#
#        mpegps	    (mpeg presentation stream, used in DVD Videos, VCDs, etc.)
#        mpegts     (mpeg transport stream, used in sat tv, blu rays, etc.)
#        wmv        (Windows Media Video, tag also used for asf files)
#        avi        (AVI container)
#        mp4        (ISOM/MPEG4 container, or MPEG4 codec)
#        mov        (Quicktime container, Apple)
#        flv        (Flash Video)
#        rm         (Real Media, RMVB)
#        mkv        (Matroska)
#        wav        (WAVE file)
#        wavpac     (WavPack)
#        lpcm       (Linear PCM)
#        aac        (Advanced Audio Codec)
#        ac3        (Audio Coding 3)
#        mp3        (Mpeg Audio Layer 3)
#        mpa        (Mpeg Audio)
#        ogg        (Ogg Vorbis)
#        wma        (Windows Media Audio)
#        dts        (Digital Theater Systems)
#        dtshd      (Digital Theater Systems)
#        truehd     (TrueHD)
#        eac3       (Extended AC3)
#        atrac      (Atrac)
#        flac       (Free Lossless Audio Codec)
#        ape        (Monkey's Audio)
#        ra         (Real Audio)
#        mpc        (MusePack)
#        aiff       (AIFF)
#        alac       (Apple Lossless)
#        dv         (Digital Video)
#        mpeg1      (Codec used in VCD)
#        mpeg2      (Codec used in DVD Videos and HDTV)
#        divx       (DivX Video)
#        h264       (H264)
#        mjpeg      (M-JPEG)
#        vc1        (VC-1)
#        jpg        (Jpeg)
#        png        (PNG)
#        gif        (GIF)
#        tiff       (TIFF)
#        bmp        (Bitmap)
#        und        (Undetermined, if the parser did not recognize one of above)
# Usage [IN ORDER TOO]:
#    f: format, MANDATORY (the only conf for a 'eat everything' renderer would be f:.+)
#    v: video codec
#    a: audio codec
#    n: max nb of audio channels (2 or 6)
#    s: max audio sample frequency in Hz
#    b: max audio bitrate in bps
#    w: max width in pixels
#    h: max height in pixels
#    m: mimetype, STRONGLY RECOMMENDED (if not declared, an estimated value is assigned)
#    other flags: right now, only qpel and gmc (see avi)
#
# In case of multiple matches, the first mime type of the list is the used one.
# Be careful with regexps such as .+ : You should not use these except when you
# are sure your renderer is quite versatile.
# [Supported video formats]: 
#Supported = f:mpegts      v:mpeg2	a:mp2	n:2		s:44100		b:192000		m:video/mpeg

# [Supported audio formats]:
#Supported = f:mp3	n:2	s:44100	m:audio/mpeg

# [Supported image formats]:
#Supported = f:jpg	m:image/jpeg

# Use faster method to create DLNA tree with MediaInfo. Not supported by some renderers,
# false by default (upnp specification violation).
CreateDLNATreeFaster = true

#----------------------------------------------------------------------------
