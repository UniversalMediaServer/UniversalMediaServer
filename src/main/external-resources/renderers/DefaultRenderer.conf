#-----------------------------------------------------------------------------
# Profile for Default Renderer.
#
# This is an example configuration file which should be used as a reference
# for creating your own renderer config. It contains descriptions of all of
# the available options.
#
# Configuration profiles serve two purposes:
#
#   - Allow UMS to recognize a specific connecting renderer
#   - Define the possibilities of that renderer
#

#-----------------------------------------------------------------------------
# RENDERER INFORMATION
#

# RendererName: Determines the name that is displayed in the UMS user
# interface when this renderer connects.
# Default: Unknown renderer
RendererName = 

# RendererIcon: Determines the icon that is displayed in the UMS user
# interface when this renderer connects. By default, these icons are
# bundled with UMS in ums.jar, but they can easily be customised:
# http://www.ps3mediaserver.org/forum/viewtopic.php?f=6&t=3507&p=49536#p49536
# Default: unknown.png
RendererIcon = 

#-----------------------------------------------------------------------------
# RENDERER RECOGNITION
#
# When a renderer connects, it sends a "User-Agent" header. UMS tries to
# match that header with all configuration profiles. If none of the profiles
# match, the message "Unknown User-Agent:" will be displayed in the logs and
# UMS will switch to a default profile.
#
# Because matching involves all renderer configuration profiles, it is
# important to match as long a string as possible. This increases the chances
# that a match is unique. Version numbers are best avoided.
#
# To learn the exact headers of any renderer, set the logging level in
# "logback.xml" to "TRACE" and look for messages like "Received on socket:".
#

# UserAgentSearch: Optional regular expression to detect a connected renderer.
# The expression is case insensitive. When the expression is empty User-Agent
# headers are not used, this is the default. Note that one renderer can use
# several different User-Agent headers.
#
# Note that UMS will attempt to match UserAgentSearch to the header block
# as a whole, so if the same identifier sometimes appears in other headers
# UserAgentSearch will return a positive match in those cases as well. For
# example the PS3 uses the phrase 'PLAYSTATION 3' sometimes in User-Agent
# and sometimes in X-AV-Client-Info (or both) and just defining
# 'UserAgentSearch = PLAYSTATION 3' will cover all these cases.
#
# Examples:
#
# UserAgentSearch = Platinum/.*DLNADOC/|yxplayer2|MPlayer |NSPlayer/
# UserAgentSearch = Windows-Media-Player-DMS|Microsoft-Windows
#
# Ignoring the "UPnP/1.0" and "UPnP/1.0 DLNADOC/1.50" headers since they are
# too general, plus they can be detected from the additional header.
# Default: ""
UserAgentSearch = 

# UserAgentAdditionalHeader: Optional additional HTTP header for better
# detection. When defined, UMS also considers this header when trying to find
# a match.
#
# Note that UMS will combine UserAgentSearch and UserAgentAdditionalHeaderSearch
# into a single expression before attempting to match it to the header block
# as a whole, so this setting should only be defined if the additional header
# is always present and required for making a unique match, i.e. only when the
# UserAgentSearch setting is omitted or insufficient by itself.
# Default: ""
UserAgentAdditionalHeader = 

# UserAgentAdditionalHeaderSearch: Regular expression to search for in the
# additional HTTP header.
# Default: ""
UserAgentAdditionalHeaderSearch = 

#-----------------------------------------------------------------------------
# BASIC CAPABILITIES
#
# This indicates to UMS what kind of media the renderer can handle. Files that
# the renderer cannot handle will be hidden from it.
#

# Video: Set to "true" if the renderer can play video.
# Default: true
Video = 

# Audio: Set to "true" if the renderer can play audio.
# Default: true
Audio = 

# Image: Set to "true" if the renderer can display images.
# Default: true
Image = 

#-----------------------------------------------------------------------------
# DLNA SETTINGS
#

# SeekByTime: Set to true to use the DLNA feature seek-by-time instead of
# the default seek-by-byte method.
#
# Valid values:
#
#     true:
#
#         The renderer supports seek-by-time.
#
#     false:
#
#         The renderer doesn't support seek-by-time, so it should
#         only use the default seek-by-byte method.
#
#     exclusive:
#
#         While most renderers that support seek-by-time also support
#         seek-by-byte, some (e.g. the PS3 [1] and Panasonic TVs [2])
#         behave unreliably if both are permitted when transcoding files.
#         This option works around this by disabling seek-by-byte for
#         transcoded files when permitting seek-by-time.
#
# [1] Seeking via "Go To" with the PS3 (firmware 4.31) and MEncoder works with
#     "exclusive", but hangs or crashes with "true".
# [2] http://www.ps3mediaserver.org/forum/viewtopic.php?f=6&t=15841
#
# Default: false
SeekByTime = 

# DLNALocalizationRequired: Serve different flavors of localization in the
# DLNA parameters (PAL/NTSC, NA/EU/JP) to allow every world wide renderer to
# see the files. Important for Sony Bravia TVs.
# Default: false
DLNALocalizationRequired = 

# CBRVideoBitrate is useful for renderers without SeekByTime support. It does
# time2byte conversion to support FF/RW.
# Only possibility how to predict where we are when seeking is using CBR bitrate
# instead of VBR used by default.
# Creating a CBR stream with MEncoder is 3 times slower than using VBR so bear
# this in mind if you have a slow computer!
# Speed can hopefully be optimized a little bit in the future:
# http://www.ps3mediaserver.org/forum/viewtopic.php?f=14&t=8883&p=53706&hilit=ditlew#p53700
# http://www.ps3mediaserver.org/forum/viewtopic.php?f=11&t=11284&p=62765&hilit=1835#p62765
# Default: 0
CBRVideoBitrate = 

# ByteToTimeseekRewindSeconds is used for fine-tuning
# Default: 0
ByteToTimeseekRewindSeconds = 

#-----------------------------------------------------------------------------
# MEDIAINFO
#

# MediaInfo: Set to "true" if UMS should parse files with MediaInfo. This will
# give UMS more accurate information, speed up browsing and prevent potential
# playback errors. It also enables the use of "Supported" to more accurately
# define the supported formats for the renderer.
# Default: false
MediaInfo = 

# CreateDLNATreeFaster: Use faster method to create the DLNA tree using the
# MediaInfo library. Since this is a UPnP specification violation, it is not
# supported by some renderers and false by default.
# Default: false
CreateDLNATreeFaster = 

#-----------------------------------------------------------------------------
# TRANSCODING AND MUXING CAPABILITIES
#
# It is very likely that a renderer cannot render all file formats. If this is
# the case, UMS should transcode or mux the file to a format that the renderer
# can display. This section defines the format that UMS should transcode or
# mux to.
#

# TranscodeVideo: Profile to use for transcoding video files.
# One of the following:
#
#    Profile            Video           Audio   Container
#    ----------------------------------------------------
#    MPEGPS-MPEG2-AC3   MPEG-2          AC-3    MPEG-PS
#    MPEGTS-MPEG2-AC3   MPEG-2          AC-3    MPEG-TS
#    MPEGTS-H264-AC3    H.264           AC-3    MPEG-TS
#    MPEGTS-H264-AAC    H.264           AAC     MPEG-TS
#    WMV:               WMV 2 (WMV 8)   WMA 2   ASF
#
# These profiles are supported by the MEncoder, FFmpeg and VLC engines.
# Default: MPEGPS-MPEG2-AC3
TranscodeVideo = 

# TranscodeAudio: Profile to use for transcoding audio files
# Currently supported: "LPCM", "MP3" or "WAV".
# Default: LPCM
TranscodeAudio = 

# DefaultVBVBufSize: Whether or not to use the default DVD buffer size. Setting
# this to "false" means a greater bitrate and faster encoding, but it can
# generate incompatible videos dependent on the renderer.
# Default: false
DefaultVBVBufSize = 

# MuxH264ToMpegTS: Whether the media renderer supports H.264 in a MPEG-TS file.
# Ignored if "MediaInfo" is set to true or on OS X 10.4.
# Default: true (conditions above)
MuxH264ToMpegTS = 

# MuxDTSToMpeg: Whether the media renderer supports DTS in an MPEG file. Ignored
# if MediaInfo = true.
# Default: false (condition above)
MuxDTSToMpeg = 

# WrapDTSIntoPCM: Set to "true" if the media renderer supports DTS wrapped
# into LPCM in a MPEG file.
# Default: true
WrapDTSIntoPCM = 

# WrapEncodedAudioIntoPCM: Set to "true" if the media renderer supports AC-3/DTS
# wrapped into LPCM in a MPEG file. It must be also enabled in GUI and overrides
# WrapDTSIntoPCM option if set to true.
# Default: false 
WrapEncodedAudioIntoPCM = 

# MuxLPCMToMpeg: Whether the media renderer supports LPCM in an MPEG file.
# Ignored if MediaInfo = true.
# Default: true
MuxLPCMToMpeg = 

# MaxVideoBitrateMbps: The maximum bitrate supported by the media renderer.
# Setting to "0" means unlimited.
# If the CPU is not very fast, it may be better to avoid using bandwidth limit
# and instead lower the bitrate by defining "CustomMencoderQualitySettings"
# and/or "CustomFFmpegOptions" since they can be less CPU-intensive.
# Default: 0
MaxVideoBitrateMbps = 

# MaxVideoWidth and MaxVideoHeight: Maximum width and height supported by the
# media renderer. 0 means unlimited.
# Both must be 0, or both must be higher than 0.
# Defaults: 1920 and 1080
MaxVideoWidth = 
MaxVideoHeight = 

# H264Level41Limited: Whether to transcode H.264 video if it exceeds level 4.1
# Default: true
H264Level41Limited = 

# TranscodeAudioTo441kHz: Set to "true" if music files need to be resampled at
# 44.1kHz.
# Default: false
TranscodeAudioTo441kHz = 

# TranscodeFastStart: Set to "true" if the renderer has a short timeout delay
# and needs to receive transcoded video with minimal delay. If set to "false",
# UMS will take some time to buffer some of the transcoded video.
# Default: false
TranscodeFastStart = 

# TranscodedVideoFileSize: The amount of transcoded data is unknown at the
# time of transcoding. Still, some renderers expect a size for the video file
# to be returned.
# Possible values are:
#            0: No size is sent to the renderer.
# 100000000000: Fake size of 100 GB is sent to the renderer.
#           -1: Specific value that works perfect for the PS3. It is against
#               the DLNA spec though.
# Default: 0
TranscodedVideoFileSize = 

# TranscodedVideoAudioSampleRate: The audio sample rate to use in transcoded
# video
# Default: 48000
TranscodedVideoAudioSampleRate = 

# MimeTypesChanges: A list of mimetype transformations, separated by |.
# Example: MimeTypesChanges = old/mime1=new/mime1|old/mime2=new/mime2
# Default: ""
MimeTypesChanges = 

# TranscodeExtensions: Comma-separated list of file extensions that are forced
# to be transcoded and never streamed. Best left empty if MediaInfo = true,
# and define "Supported" formats instead.
# Default: ""
TranscodeExtensions =

# StreamExtensions: Comma-separated list of file extensions that are forced
# to be streamed and never transcoded. Best left empty if MediaInfo = true,
# and define "Supported" formats instead.
# Default: ""
StreamExtensions =

# ForceJPGThumbnails: Some renderers (e.g. Sony Bravia TVs and Blu-ray Disc
# players) require thumbnails to be represented as JPEGs (JPEG_TN) in the
# DLNA directory XML. Set this to true to force UMS to fake this representation.
# Notse: this has no effect on real thumbnail file formats or content-type
# headers, and will only return true if MediaInfo = true
# Default: false
ForceJPGThumbnails = 

# ThumbnailAsResource: Set to true if the renderer requires the use of the
# "res" element instead of the "albumArtURI" element for thumbnails in DLNA
# reponses. E.g. Samsung 2012 models do not recognize the "albumArtURI"
# element.
# Default: false, i.e. use "albumArtURI"
ThumbnailAsResource = 

# ChunkedTransfer: Some renderers are particular about the "Content-Length"
# headers in requests (e.g. Sony Blu-ray Disc players). By default, UMS will
# send a "Content-Length" that refers to the total media size, even if the exact
# length is unknown. Set this option to true to omit sending a length when it is
# unknown.
# Default: false
ChunkedTransfer = 

# CustomFFmpegOptions: Overrides the FFmpeg custom options in UMS for
# this renderer. Default is empty, which means the UMS settings will be used.
# All setting for output formats, codecs, bitrate e.g. can be used except video,
# audio and subs mapping (-map).
# Do not use it to override the FFmpeg video filter setting. Use
# OverrideVideoFilter instead.
# Default: ""
CustomFFmpegOptions = 

# OverrideFFmpegVideoFilter: Overrides the scale and pad part of FFmpeg 
# VideoFilter options in UMS for this renderer. It leave all internal
# VideoFilter setting for subtitles untouched. Do not use -vf in this option and
# add only VideoFilter parameters (filters) separated by commas. Commas inside
# the filters are taken as a break so they must have an prefix.
# Example: OverrideFFmpegVideoFilter = pad=max(iw\\,ih*16/9)
# Default: ""
OverrideFFmpegVideoFilter = 

# CustomMencoderQualitySettings: Overrides the MEncoder transcoding quality
# settings in UMS for this renderer.
# Default: ""
CustomMencoderQualitySettings = 

# CustomMencoderOptions: Overrides the MEncoder custom options in UMS for
# this renderer.
# Many values will work, but particularly safe ones are:
# channels, lavcopts vcodec, lavcopts acodec, lavcopts abitrate
# Default: ""
CustomMencoderOptions = 

# DisableMencoderNoskip: Prevents -noskip from being used by MEncoderVideo.
# Default: false
DisableMencoderNoskip = 

# SubtitleHttpHeader: Some devices recognize a custom HTTP header for
# retrieving the contents of a subtitles file. Set this option to the name of
# that custom header and UMS will send the URL for the subtitles file in that
# header (e.g. Samsung devices recognize the "CaptionInfo.sec" header).
# Default: "", i.e. UMS will not send such header information.
SubtitleHttpHeader = 

# KeepAspectRatio: This option adds black borders to the video to prevent the
# renderer from displaying an incorrect aspect ratio.
# If some videos on your renderer looked either stretched or squashed, enabling
# this setting may fix that.
# Default: false
KeepAspectRatio = 

# RescaleByRenderer: If this is false, FFmpeg will upscale videos with
# resolutions lower than SD (720 pixels wide) to the maximum resolution your
# renderer supports.
# Changing it to false is only recommended if your renderer has poor-quality
# upscaling, since we will use more CPU and network bandwidth when it is false.
# To use it, MaxVideoWidth and MaxVideoHeight must be set.
# Default: true
RescaleByRenderer = 

# LimitFolders: Whether the renderer has a maximum folder limit
# Default: true
LimitFolders = 

#-----------------------------------------------------------------------------
# Other useful hidden params and their default values if not defined:
#

# Display audio tag in TRANSCODE folder if defined in container (useful to find
# out correct audio track like commentary etc.)
# Default: true
ShowAudioMetadata = 

# Display subtitle tag in TRANSCODE folder if defined in container (showing
# subtitles info like forced, full, documentary etc.)
# Default: true
ShowSubMetadata = 

# Some renderers can't show length of DVD titles so it will add it directly to
# title name to be shown
# Default: false
ShowDVDTitleDuration = 

# Specified extension will be added to every file shared by UMS
# Default: ""
UseSameExtension = 

# Change DLNA PN arguments, separated by |.
# Example: OldDlnaPn=NewDlnaPn|OldDlnaPn2=NewDlnaPn2
# Default: ""
DLNAProfileChanges = 

# PN is defined for every file sent to the renderer via DLNAOrgPN value. If
# this value is wrong, the renderer may refuse listing or playing this file.
# When it is set to false, no DLNAOrgPN is sent to renderer, which can help
# with troubleshooting.
# The PN is a description of the file, e.g. AVC_TS_HD_60_AC3_ISO
# Most renderers require this to be true.
# Default: true
DLNAOrgPN = 

# Undocumented.
# Default: false
MediaParserV2_ThumbnailGeneration = 

# Wrap and/or truncate long labels. Sony Blu-ray Disc (and possibly other)
# renderers truncate long labels by default, but will process newline characters
# normally if the label contains them.
#
# These (optional) integer parameters control label layout:
#    width       - max number of chars per line (0=text wrap off)
#    height      - max number of lines per xmb item (0=no limit)
#    indent      - number of "hanging indent" whitespace chars to use
#                  (to avoid being overwritten by format icons)
#    whitespace  - decimal ascii # of the whitespace char to use (9=tab 32=space
#                  etc)
#    dots        - number of dots... to add at the end of truncated labels
#
# Example: TextWrap = width:0 indent:0 height:0 whitespace:9 dots:0
# Default: ""
TextWrap = 

# Whether to send the last modified date metadata for files and folders, which
# can take up screen space on some renderers.
# Default: true
SendDateMetadata = 

# The loading priority of this renderer. This should be set to 1 (or greater)
# if this renderer config is a more specific version of one we already have.
# For example, we have a Panasonic TVs config that is used for all
# Panasonic TVs, except the ones we have specific configs for, so the
# specific ones have a greater priority to ensure they are used when
# applicable instead of the less-specific renderer config.
# Default: 0
LoadingPriority = 

#-----------------------------------------------------------------------------
# IMAGES
#

# AutoExifRotate: Many cameras store information in the image file about the
# orientation of the camera while the picture was taken, allowing viewers to
# know which way was up. Set this option to "true" to allow UMS to rotate JPEG
# files based on EXIF information contained in the file, and relieve the
# renderer of that task.
# Default: false
AutoExifRotate = 

#-----------------------------------------------------------------------------
# SUPPORTED MEDIA FORMATS
#
# This section defines which media formats are supported by this renderer. If
# a file is supported and its mediainfo indicates that it falls within the
# capabilities of this renderer, UMS will stream the file to the renderer. All
# other files will be transcoded to the format specified in "TranscodeVideo"
# or "TranscodeAudio" before being sent to the renderer.
#
# Each format that the renderer supports should result in a "Supported" line
# that defines the capabilities of the renderer. When MediaInfo = true, media
# files are parsed and their properties are matched against all "Supported"
# lines. If a value for a specific property cannot be parsed, that property
# is assumed to match.
#
# The order of the "Supported" lines matters: when multiple lines match, the
# first match is used.
#
# The media parser and this configuration file will recognize the following
# formats and codecs. Use lower case names only. Regular expressions are
# supported.
#
# The following is a list of tags, full names, usual MIME types and notes:
#
#    Tag:     Full Name:                                MIME type:                         Notes:
#    --------------------------------------------------------------------------------------------
#    aac      Advanced Audio Coding (Low Complexity)    audio/x-m4a
#    aac-he   Advanced Audio Coding (High-Efficiency)   audio/aacp
#    ac3      Audio Codec 3 (Dolby Digital)             audio/ac3
#    aiff     Audio Interchange File Format             audio/L16
#    alac     Apple Lossless Audio Codec                audio/m4a
#    ape      Monkey's Audio                            audio/ape
#    atrac    Adaptive Transform Acoustic Coding        audio/x-sony-oma
#    avi      Audio Video Interleave                    video/avi
#    bmp      Bitmap                                    image/bmp
#    divx     DivX Video                                video/avi
#    dts      Digital Theater Systems                   audio/vnd.dts
#    dtshd    Digital Theater Systems (HD)              audio/vnd.dts.hd
#    dv       Digital Video                             video/dv
#    eac3     Enhanced AC-3 (Dolby Digital Plus)        audio/eac3
#    flac     Free Lossless Audio Codec                 audio/x-flac
#    flv      Flash Video                               video/x-flv
#    gif      Graphics Interchange Format               image/gif
#    h264     H.264/MPEG-4 Part 10 (AVC)                video/h264
#    jpg      JPEG                                      image/jpeg
#    lpcm     Linear Pulse-Code Modulation              audio/L16
#    mjpeg    Motion JPEG                               video/x-motion-jpeg
#    mkv      Matroska Video                            video/x-matroska
#    mov      QuickTime File Format                     video/quicktime
#    mp3      MPEG-1 or MPEG-2 Audio Layer III          audio/mpeg
#    mp4      ISOM/MPEG4 container, or MPEG-4 codec     video/mp4
#    mpa      MPEG Audio                                audio/mpeg
#    mpc      MusePack                                  audio/x-musepack
#    mpeg1    MPEG-1                                    video/mpeg                         Used in VCDs
#    mpeg2    MPEG-2                                    video/mpeg                         Used in DVDs and HDTV broadcasts
#    mpegps   MPEG Program Stream                       video/mpeg                         Used in DVDs and VCDs
#    mpegts   MPEG Transport Stream                     video/mpeg                         Used in sat TV and Blu-ray Discs
#    ogg      Ogg Vorbis                                audio/x-ogg
#    png      Portable Network Graphics                 image/png
#    ra       RealAudio                                 audio/vnd.rn-realaudio
#    rm       RealMedia (RMVB)                          application/vnd.rn-realmedia-vbr
#    tiff     Tagged Image File Format                  image/tiff
#    truehd   Dolby TrueHD                              audio/vnd.dolby.mlp
#    vc1      Microsoft VC-1                            video/vc1
#    wavpac   WavPack                                   audio/wavpack
#    wav      Waveform Audio File Format                audio/wav
#    wma      Windows Media Audio                       audio/x-ms-wma
#    wmv      Windows Media Video                       video/x-ms-wmv                     Tag also used for asf files
#
#    und      Undetermined, if the parser did not recognize one of above
#
# There are a lot of good resources for finding MIME types on the Internet, one
# of which is http://www.iana.org/assignments/media-types/media-types.xhtml
#
# Each of the "Supported" lines contains the following parameters separated by
# spaces or tabs:
#
#    f:    Regular expression to match the format of a file as parsed by the
#          MediaInfo library (see the list above). This parameter is mandatory.
#          Be careful when matching everything with ".+"; the renderer must be
#          able to handle all formats.
#
#    v:    Regular expression to match the video codec of the file as parsed by
#          the MediaInfo library (see the list above).
#
#    a:    Regular expression to match the audio codec of the file as parsed by
#          the MediaInfo library (see the list above).
#
#    m:    The MIME type to send to the renderer. Use of this parameter is
#          strongly recommended. If it is not set, an estimated value will be
#          assigned.
#
#    n:    The maximum number of audio channels used in the file as parsed by
#          the MediaInfo library.
#
#    s:    The maximum audio sample frequency used in the file as parsed by
#          the MediaInfo library, specified in Hertz.
#
#    b:    The maximum audio bit rate used in the file as parsed by the
#          MediaInfo library, specified in bits per second.
#
#    w:    The maximum video width used in the file as parsed by the MediaInfo
#          library, specified in pixels.
#
#    h:    The maximum video height used in the file as parsed by the MediaInfo
#          library, specified in pixels.
#
#    qpel: Quarter pixel codec setting in the file as parsed by the MediaInfo
#          library.
#
#    gmc:  The number of global motion compensation warp points in the file as
#          parsed by the MediaInfo library.
#
#    gop:static  Forces transcoding for mpeg video coded with GOP=variable
#                format which is not supported by some renderers
#

# Supported video formats:
# Supported audio formats:
# Supported image formats:

# SupportedExternalSubtitlesFormats: Comma-separated list of text-based subtitle
# formats of external subtitles supported by the renderer for streaming together
# with streaming (not transcoded) video.
#
#    Supported formats:   File extension:
#    ------------------------------------
#    ASS                  .ass or .ssa
#    MICRODVD             .sub
#    SAMI                 .smi
#    SUBRIP               .srt
#    TEXT                 .txt
#    WEBTT                .wtt
#
# Example: SupportedExternalSubtitlesFormats = SUBRIP,ASS,MICRODVD
# Default: ""
SupportedExternalSubtitlesFormats = 

# SupportedInternalSubtitlesFormats: Comma-separated list of embedded subtitle
# formats supported by the renderer.
#
#    Supported formats:
#    ------------------
#    ASS
#    BMP
#    DIVX
#    MICRODVD
#    PGS
#    SAMI
#    SUBRIP
#    TEXT
#    TX3G
#    USF
#    VOBSUB
#    WEBTT
#
# Example: SupportedInternalSubtitlesFormats = SUBRIP,ASS,PSG,DIVX
# Default: ""
SupportedInternalSubtitlesFormats = 

# UseClosedCaption: Some renderers use the "sec:CaptionInfoEx" parameter to
# stream external subtitles.
# Supported subtitles are defined in SupportedSubtitlesFormat.
# Default: false
UseClosedCaption = 

# Output3DFormat: The preferred 3D video format. This option forces FFmpeg to
# convert it.
# Note: The conversion is CPU-intensive so some CPUs may not be fast enough.
# 
# Choose one of the available presets:
#
#    Preset:   Description:
#    ----------------------
#    arcg      Anaglyph (Red, cyan, gray)
#    arch      Anaglyph (Red, cyan, half color)
#    arcc      Anaglyph (Red, cyan, color)
#    arcd      Anaglyph (Red, cyan, dubois)
#    agmg      Anaglyph (Green, magenta, gray)
#    agmh      Anaglyph (Green, magenta, half color)
#    agmc      Anaglyph (Green, magenta, color)
#    agmd      Anaglyph (Green, magenta, dubois)
#    aybg      Anaglyph (Yellow, blue, gray)
#    aybh      Anaglyph (Yellow, blue, half color)
#    aybc      Anaglyph (Yellow, blue, color)
#    aybd      Anaglyph (Yellow, blue, dubois)
#    ml        Mono (Left eye first)
#    mr        Mono (Right eye first)
#    sbsl      Side by side (Left eye first)
#    sbsr      Side by side (Right eye first)
#    sbs2l     Half side by side (Left eye first)
#    sbs2r     Half side by side (Right eye first)
#    abl       Over under (Left eye first)
#    abr       Over under (Right eye first)
#    ab2l      Half over under (Left eye first)
#    ab2r      Half over under (Right eye first)
#    irl       Interleave rows (Left eye first)
#    irr       Interleave rows (Right eye first)
#
# Default: ""
Output3DFormat = 